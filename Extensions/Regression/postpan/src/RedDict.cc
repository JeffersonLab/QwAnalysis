//
// File generated by /u/apps/root/5.26-00/root/bin/rootcint at Tue Jun 14 19:19:32 2011

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RedDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TaConfFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaConfFile(void *p = 0);
   static void *newArray_TaConfFile(Long_t size, void *p);
   static void delete_TaConfFile(void *p);
   static void deleteArray_TaConfFile(void *p);
   static void destruct_TaConfFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaConfFile*)
   {
      ::TaConfFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaConfFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaConfFile", ::TaConfFile::Class_Version(), "./TaConfFile.hh", 22,
                  typeid(::TaConfFile), DefineBehavior(ptr, ptr),
                  &::TaConfFile::Dictionary, isa_proxy, 0,
                  sizeof(::TaConfFile) );
      instance.SetNew(&new_TaConfFile);
      instance.SetNewArray(&newArray_TaConfFile);
      instance.SetDelete(&delete_TaConfFile);
      instance.SetDeleteArray(&deleteArray_TaConfFile);
      instance.SetDestructor(&destruct_TaConfFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaConfFile*)
   {
      return GenerateInitInstanceLocal((::TaConfFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaConfFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaInput_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaInput(void *p = 0);
   static void *newArray_TaInput(Long_t size, void *p);
   static void delete_TaInput(void *p);
   static void deleteArray_TaInput(void *p);
   static void destruct_TaInput(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaInput*)
   {
      ::TaInput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaInput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaInput", ::TaInput::Class_Version(), "./TaInput.hh", 21,
                  typeid(::TaInput), DefineBehavior(ptr, ptr),
                  &::TaInput::Dictionary, isa_proxy, 0,
                  sizeof(::TaInput) );
      instance.SetNew(&new_TaInput);
      instance.SetNewArray(&newArray_TaInput);
      instance.SetDelete(&delete_TaInput);
      instance.SetDeleteArray(&deleteArray_TaInput);
      instance.SetDestructor(&destruct_TaInput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaInput*)
   {
      return GenerateInitInstanceLocal((::TaInput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaInput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaOResultsFile_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TaOResultsFile(void *p);
   static void deleteArray_TaOResultsFile(void *p);
   static void destruct_TaOResultsFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaOResultsFile*)
   {
      ::TaOResultsFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaOResultsFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaOResultsFile", ::TaOResultsFile::Class_Version(), "./../../pan/src/TaOResultsFile.hh", 30,
                  typeid(::TaOResultsFile), DefineBehavior(ptr, ptr),
                  &::TaOResultsFile::Dictionary, isa_proxy, 0,
                  sizeof(::TaOResultsFile) );
      instance.SetDelete(&delete_TaOResultsFile);
      instance.SetDeleteArray(&deleteArray_TaOResultsFile);
      instance.SetDestructor(&destruct_TaOResultsFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaOResultsFile*)
   {
      return GenerateInitInstanceLocal((::TaOResultsFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaOResultsFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaFileName_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaFileName(void *p = 0);
   static void *newArray_TaFileName(Long_t size, void *p);
   static void delete_TaFileName(void *p);
   static void deleteArray_TaFileName(void *p);
   static void destruct_TaFileName(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaFileName*)
   {
      ::TaFileName *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaFileName >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaFileName", ::TaFileName::Class_Version(), "./../../pan/src/TaFileName.hh", 29,
                  typeid(::TaFileName), DefineBehavior(ptr, ptr),
                  &::TaFileName::Dictionary, isa_proxy, 0,
                  sizeof(::TaFileName) );
      instance.SetNew(&new_TaFileName);
      instance.SetNewArray(&newArray_TaFileName);
      instance.SetDelete(&delete_TaFileName);
      instance.SetDeleteArray(&deleteArray_TaFileName);
      instance.SetDestructor(&destruct_TaFileName);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaFileName*)
   {
      return GenerateInitInstanceLocal((::TaFileName*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaFileName*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void VaAna_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_VaAna(void *p = 0);
   static void *newArray_VaAna(Long_t size, void *p);
   static void delete_VaAna(void *p);
   static void deleteArray_VaAna(void *p);
   static void destruct_VaAna(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::VaAna*)
   {
      ::VaAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VaAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VaAna", ::VaAna::Class_Version(), "./VaAna.hh", 25,
                  typeid(::VaAna), DefineBehavior(ptr, ptr),
                  &::VaAna::Dictionary, isa_proxy, 0,
                  sizeof(::VaAna) );
      instance.SetNew(&new_VaAna);
      instance.SetNewArray(&newArray_VaAna);
      instance.SetDelete(&delete_VaAna);
      instance.SetDeleteArray(&deleteArray_VaAna);
      instance.SetDestructor(&destruct_VaAna);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::VaAna*)
   {
      return GenerateInitInstanceLocal((::VaAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VaAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaString_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaString(void *p = 0);
   static void *newArray_TaString(Long_t size, void *p);
   static void delete_TaString(void *p);
   static void deleteArray_TaString(void *p);
   static void destruct_TaString(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaString*)
   {
      ::TaString *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaString >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaString", ::TaString::Class_Version(), "./../../pan/src/TaString.hh", 36,
                  typeid(::TaString), DefineBehavior(ptr, ptr),
                  &::TaString::Dictionary, isa_proxy, 0,
                  sizeof(::TaString) );
      instance.SetNew(&new_TaString);
      instance.SetNewArray(&newArray_TaString);
      instance.SetDelete(&delete_TaString);
      instance.SetDeleteArray(&deleteArray_TaString);
      instance.SetDestructor(&destruct_TaString);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaString*)
   {
      return GenerateInitInstanceLocal((::TaString*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaString*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaRedAna_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaRedAna(void *p = 0);
   static void *newArray_TaRedAna(Long_t size, void *p);
   static void delete_TaRedAna(void *p);
   static void deleteArray_TaRedAna(void *p);
   static void destruct_TaRedAna(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaRedAna*)
   {
      ::TaRedAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaRedAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaRedAna", ::TaRedAna::Class_Version(), "./TaRedAna.hh", 23,
                  typeid(::TaRedAna), DefineBehavior(ptr, ptr),
                  &::TaRedAna::Dictionary, isa_proxy, 0,
                  sizeof(::TaRedAna) );
      instance.SetNew(&new_TaRedAna);
      instance.SetNewArray(&newArray_TaRedAna);
      instance.SetDelete(&delete_TaRedAna);
      instance.SetDeleteArray(&deleteArray_TaRedAna);
      instance.SetDestructor(&destruct_TaRedAna);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaRedAna*)
   {
      return GenerateInitInstanceLocal((::TaRedAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaRedAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaStatistics_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TaStatistics(void *p);
   static void deleteArray_TaStatistics(void *p);
   static void destruct_TaStatistics(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaStatistics*)
   {
      ::TaStatistics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaStatistics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaStatistics", ::TaStatistics::Class_Version(), "./../../pan/src/TaStatistics.hh", 46,
                  typeid(::TaStatistics), DefineBehavior(ptr, ptr),
                  &::TaStatistics::Dictionary, isa_proxy, 0,
                  sizeof(::TaStatistics) );
      instance.SetDelete(&delete_TaStatistics);
      instance.SetDeleteArray(&deleteArray_TaStatistics);
      instance.SetDestructor(&destruct_TaStatistics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaStatistics*)
   {
      return GenerateInitInstanceLocal((::TaStatistics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaStatistics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaRootRegDef_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaRootRegDef(void *p = 0);
   static void *newArray_TaRootRegDef(Long_t size, void *p);
   static void delete_TaRootRegDef(void *p);
   static void deleteArray_TaRootRegDef(void *p);
   static void destruct_TaRootRegDef(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaRootRegDef*)
   {
      ::TaRootRegDef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaRootRegDef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaRootRegDef", ::TaRootRegDef::Class_Version(), "./TaRegression.hh", 23,
                  typeid(::TaRootRegDef), DefineBehavior(ptr, ptr),
                  &::TaRootRegDef::Dictionary, isa_proxy, 0,
                  sizeof(::TaRootRegDef) );
      instance.SetNew(&new_TaRootRegDef);
      instance.SetNewArray(&newArray_TaRootRegDef);
      instance.SetDelete(&delete_TaRootRegDef);
      instance.SetDeleteArray(&deleteArray_TaRootRegDef);
      instance.SetDestructor(&destruct_TaRootRegDef);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaRootRegDef*)
   {
      return GenerateInitInstanceLocal((::TaRootRegDef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaRootRegDef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaRegression_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaRegression(void *p = 0);
   static void *newArray_TaRegression(Long_t size, void *p);
   static void delete_TaRegression(void *p);
   static void deleteArray_TaRegression(void *p);
   static void destruct_TaRegression(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaRegression*)
   {
      ::TaRegression *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaRegression >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaRegression", ::TaRegression::Class_Version(), "./TaRegression.hh", 92,
                  typeid(::TaRegression), DefineBehavior(ptr, ptr),
                  &::TaRegression::Dictionary, isa_proxy, 0,
                  sizeof(::TaRegression) );
      instance.SetNew(&new_TaRegression);
      instance.SetNewArray(&newArray_TaRegression);
      instance.SetDelete(&delete_TaRegression);
      instance.SetDeleteArray(&deleteArray_TaRegression);
      instance.SetDestructor(&destruct_TaRegression);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaRegression*)
   {
      return GenerateInitInstanceLocal((::TaRegression*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaRegression*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaDitCyc_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaDitCyc(void *p = 0);
   static void *newArray_TaDitCyc(Long_t size, void *p);
   static void delete_TaDitCyc(void *p);
   static void deleteArray_TaDitCyc(void *p);
   static void destruct_TaDitCyc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaDitCyc*)
   {
      ::TaDitCyc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaDitCyc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaDitCyc", ::TaDitCyc::Class_Version(), "./TaDitCyc.hh", 30,
                  typeid(::TaDitCyc), DefineBehavior(ptr, ptr),
                  &::TaDitCyc::Dictionary, isa_proxy, 0,
                  sizeof(::TaDitCyc) );
      instance.SetNew(&new_TaDitCyc);
      instance.SetNewArray(&newArray_TaDitCyc);
      instance.SetDelete(&delete_TaDitCyc);
      instance.SetDeleteArray(&deleteArray_TaDitCyc);
      instance.SetDestructor(&destruct_TaDitCyc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaDitCyc*)
   {
      return GenerateInitInstanceLocal((::TaDitCyc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaDitCyc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaRootDitDef_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaRootDitDef(void *p = 0);
   static void *newArray_TaRootDitDef(Long_t size, void *p);
   static void delete_TaRootDitDef(void *p);
   static void deleteArray_TaRootDitDef(void *p);
   static void destruct_TaRootDitDef(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaRootDitDef*)
   {
      ::TaRootDitDef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaRootDitDef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaRootDitDef", ::TaRootDitDef::Class_Version(), "./TaDitAna.hh", 30,
                  typeid(::TaRootDitDef), DefineBehavior(ptr, ptr),
                  &::TaRootDitDef::Dictionary, isa_proxy, 0,
                  sizeof(::TaRootDitDef) );
      instance.SetNew(&new_TaRootDitDef);
      instance.SetNewArray(&newArray_TaRootDitDef);
      instance.SetDelete(&delete_TaRootDitDef);
      instance.SetDeleteArray(&deleteArray_TaRootDitDef);
      instance.SetDestructor(&destruct_TaRootDitDef);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaRootDitDef*)
   {
      return GenerateInitInstanceLocal((::TaRootDitDef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaRootDitDef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TaDitAna_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TaDitAna(void *p = 0);
   static void *newArray_TaDitAna(Long_t size, void *p);
   static void delete_TaDitAna(void *p);
   static void deleteArray_TaDitAna(void *p);
   static void destruct_TaDitAna(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TaDitAna*)
   {
      ::TaDitAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TaDitAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TaDitAna", ::TaDitAna::Class_Version(), "./TaDitAna.hh", 126,
                  typeid(::TaDitAna), DefineBehavior(ptr, ptr),
                  &::TaDitAna::Dictionary, isa_proxy, 0,
                  sizeof(::TaDitAna) );
      instance.SetNew(&new_TaDitAna);
      instance.SetNewArray(&newArray_TaDitAna);
      instance.SetDelete(&delete_TaDitAna);
      instance.SetDeleteArray(&deleteArray_TaDitAna);
      instance.SetDestructor(&destruct_TaDitAna);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TaDitAna*)
   {
      return GenerateInitInstanceLocal((::TaDitAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TaDitAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TaConfFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaConfFile::Class_Name()
{
   return "TaConfFile";
}

//______________________________________________________________________________
const char *TaConfFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaConfFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaConfFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaConfFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaConfFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaConfFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaConfFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaConfFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaInput::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaInput::Class_Name()
{
   return "TaInput";
}

//______________________________________________________________________________
const char *TaInput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaInput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaInput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaInput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaInput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaInput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaInput::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaInput*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaOResultsFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaOResultsFile::Class_Name()
{
   return "TaOResultsFile";
}

//______________________________________________________________________________
const char *TaOResultsFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaOResultsFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaOResultsFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaOResultsFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaOResultsFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaOResultsFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaOResultsFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaOResultsFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaFileName::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaFileName::Class_Name()
{
   return "TaFileName";
}

//______________________________________________________________________________
const char *TaFileName::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaFileName*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaFileName::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaFileName*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaFileName::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaFileName*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaFileName::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaFileName*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *VaAna::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *VaAna::Class_Name()
{
   return "VaAna";
}

//______________________________________________________________________________
const char *VaAna::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::VaAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VaAna::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::VaAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VaAna::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::VaAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VaAna::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::VaAna*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaString::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaString::Class_Name()
{
   return "TaString";
}

//______________________________________________________________________________
const char *TaString::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaString*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaString::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaString*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaString::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaString*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaString::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaString*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaRedAna::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaRedAna::Class_Name()
{
   return "TaRedAna";
}

//______________________________________________________________________________
const char *TaRedAna::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRedAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaRedAna::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRedAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaRedAna::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRedAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaRedAna::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRedAna*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaStatistics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaStatistics::Class_Name()
{
   return "TaStatistics";
}

//______________________________________________________________________________
const char *TaStatistics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaStatistics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaStatistics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaStatistics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaStatistics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaStatistics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaStatistics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaStatistics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaRootRegDef::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaRootRegDef::Class_Name()
{
   return "TaRootRegDef";
}

//______________________________________________________________________________
const char *TaRootRegDef::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRootRegDef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaRootRegDef::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRootRegDef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaRootRegDef::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRootRegDef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaRootRegDef::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRootRegDef*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaRegression::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaRegression::Class_Name()
{
   return "TaRegression";
}

//______________________________________________________________________________
const char *TaRegression::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRegression*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaRegression::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRegression*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaRegression::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRegression*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaRegression::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRegression*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaDitCyc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaDitCyc::Class_Name()
{
   return "TaDitCyc";
}

//______________________________________________________________________________
const char *TaDitCyc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaDitCyc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaDitCyc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaDitCyc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaDitCyc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaDitCyc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaDitCyc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaDitCyc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaRootDitDef::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaRootDitDef::Class_Name()
{
   return "TaRootDitDef";
}

//______________________________________________________________________________
const char *TaRootDitDef::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRootDitDef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaRootDitDef::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaRootDitDef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaRootDitDef::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRootDitDef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaRootDitDef::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaRootDitDef*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TaDitAna::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TaDitAna::Class_Name()
{
   return "TaDitAna";
}

//______________________________________________________________________________
const char *TaDitAna::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaDitAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TaDitAna::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TaDitAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TaDitAna::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaDitAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TaDitAna::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TaDitAna*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TaFileName::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaFileName.

   ::Error("TaFileName::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TaFileName::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaFileName.
      TClass *R__cl = ::TaFileName::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fFileName", (void*)&fFileName);
      ::ROOT::GenericShowMembers("string", (void*)&fFileName, R__insp, strcat(R__parent,"fFileName."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaFileName(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaFileName : new ::TaFileName;
   }
   static void *newArray_TaFileName(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaFileName[nElements] : new ::TaFileName[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaFileName(void *p) {
      delete ((::TaFileName*)p);
   }
   static void deleteArray_TaFileName(void *p) {
      delete [] ((::TaFileName*)p);
   }
   static void destruct_TaFileName(void *p) {
      typedef ::TaFileName current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaFileName

//______________________________________________________________________________
void TaString::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaString.

   ::Error("TaString::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TaString::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaString.
      TClass *R__cl = ::TaString::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      ::ROOT::GenericShowMembers("string", ( ::string *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaString(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaString : new ::TaString;
   }
   static void *newArray_TaString(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaString[nElements] : new ::TaString[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaString(void *p) {
      delete ((::TaString*)p);
   }
   static void deleteArray_TaString(void *p) {
      delete [] ((::TaString*)p);
   }
   static void destruct_TaString(void *p) {
      typedef ::TaString current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaString

//______________________________________________________________________________
void TaStatistics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaStatistics.

   ::Error("TaStatistics::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TaStatistics::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaStatistics.
      TClass *R__cl = ::TaStatistics::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fGoodErrors", &fGoodErrors);
      R__insp.Inspect(R__cl, R__parent, "fFirstPass", &fFirstPass);
      R__insp.Inspect(R__cl, R__parent, "fN", &fN);
      R__insp.Inspect(R__cl, R__parent, "fN2", &fN2);
      R__insp.Inspect(R__cl, R__parent, "fSumWt", (void*)&fSumWt);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWt, R__insp, strcat(R__parent,"fSumWt."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWt2", (void*)&fSumWt2);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWt2, R__insp, strcat(R__parent,"fSumWt2."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWtX", (void*)&fSumWtX);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWtX, R__insp, strcat(R__parent,"fSumWtX."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWtX2", (void*)&fSumWtX2);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWtX2, R__insp, strcat(R__parent,"fSumWtX2."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWt2Err2", (void*)&fSumWt2Err2);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWt2Err2, R__insp, strcat(R__parent,"fSumWt2Err2."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fXbar", (void*)&fXbar);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fXbar, R__insp, strcat(R__parent,"fXbar."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWtXs", (void*)&fSumWtXs);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWtXs, R__insp, strcat(R__parent,"fSumWtXs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSumWtXs2", (void*)&fSumWtXs2);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&fSumWtXs2, R__insp, strcat(R__parent,"fSumWtXs2."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TaStatistics(void *p) {
      delete ((::TaStatistics*)p);
   }
   static void deleteArray_TaStatistics(void *p) {
      delete [] ((::TaStatistics*)p);
   }
   static void destruct_TaStatistics(void *p) {
      typedef ::TaStatistics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaStatistics

//______________________________________________________________________________
void TaOResultsFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaOResultsFile.

   ::Error("TaOResultsFile::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TaOResultsFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaOResultsFile.
      TClass *R__cl = ::TaOResultsFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fPtag", (void*)&fPtag);
      ::ROOT::GenericShowMembers("string", (void*)&fPtag, R__insp, strcat(R__parent,"fPtag."),false);
      R__parent[R__ncp] = 0;
      ::ROOT::GenericShowMembers("basic_ofstream<char,char_traits<char> >", ( ::basic_ofstream<char,char_traits<char> > *) (this ), R__insp, R__parent, false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TaOResultsFile(void *p) {
      delete ((::TaOResultsFile*)p);
   }
   static void deleteArray_TaOResultsFile(void *p) {
      delete [] ((::TaOResultsFile*)p);
   }
   static void destruct_TaOResultsFile(void *p) {
      typedef ::TaOResultsFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaOResultsFile

//______________________________________________________________________________
void TaConfFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaConfFile.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TaConfFile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaConfFile.
      TClass *R__cl = ::TaConfFile::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fConfFile", &fConfFile);
      R__insp.Inspect(R__cl, R__parent, "fFileName", (void*)&fFileName);
      ::ROOT::GenericShowMembers("string", (void*)&fFileName, R__insp, strcat(R__parent,"fFileName."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fCksum", &fCksum);
      R__insp.Inspect(R__cl, R__parent, "analysis", &analysis);
      analysis.ShowMembers(R__insp, strcat(R__parent,"analysis.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "regtype", &regtype);
      regtype.ShowMembers(R__insp, strcat(R__parent,"regtype.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "regmatrixchoice", &regmatrixchoice);
      regmatrixchoice.ShowMembers(R__insp, strcat(R__parent,"regmatrixchoice.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "treetype", &treetype);
      treetype.ShowMembers(R__insp, strcat(R__parent,"treetype.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "minirunevt", &minirunevt);
      R__insp.Inspect(R__cl, R__parent, "usecuts", &usecuts);
      R__insp.Inspect(R__cl, R__parent, "cycles", &cycles);
      R__insp.Inspect(R__cl, R__parent, "iv", (void*)&iv);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&iv, R__insp, strcat(R__parent,"iv."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "dv", (void*)&dv);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&dv, R__insp, strcat(R__parent,"dv."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "pancuts", (void*)&pancuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&pancuts, R__insp, strcat(R__parent,"pancuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "rawcuts", (void*)&rawcuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&rawcuts, R__insp, strcat(R__parent,"rawcuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "paircuts", (void*)&paircuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&paircuts, R__insp, strcat(R__parent,"paircuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "rootanatype", &rootanatype);
      rootanatype.ShowMembers(R__insp, strcat(R__parent,"rootanatype.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "commenttag", &commenttag);
      commenttag.ShowMembers(R__insp, strcat(R__parent,"commenttag.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "monList", (void*)&monList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&monList, R__insp, strcat(R__parent,"monList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "detList", (void*)&detList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&detList, R__insp, strcat(R__parent,"detList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "ditList", (void*)&ditList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&ditList, R__insp, strcat(R__parent,"ditList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "curmon", &curmon);
      curmon.ShowMembers(R__insp, strcat(R__parent,"curmon.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUseCurMon", &fUseCurMon);
      R__insp.Inspect(R__cl, R__parent, "customcut", (void*)&customcut);
      ::ROOT::GenericShowMembers("pair<TString,TString>", (void*)&customcut, R__insp, strcat(R__parent,"customcut."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "ditLimList", (void*)&ditLimList);
      ::ROOT::GenericShowMembers("vector<pair<TString,Double_t> >", (void*)&ditLimList, R__insp, strcat(R__parent,"ditLimList."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaConfFile(void *p) {
      return  p ? new(p) ::TaConfFile : new ::TaConfFile;
   }
   static void *newArray_TaConfFile(Long_t nElements, void *p) {
      return p ? new(p) ::TaConfFile[nElements] : new ::TaConfFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaConfFile(void *p) {
      delete ((::TaConfFile*)p);
   }
   static void deleteArray_TaConfFile(void *p) {
      delete [] ((::TaConfFile*)p);
   }
   static void destruct_TaConfFile(void *p) {
      typedef ::TaConfFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaConfFile

//______________________________________________________________________________
void TaInput::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaInput.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TaInput::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaInput.
      TClass *R__cl = ::TaInput::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPanFile", &fPanFile);
      R__insp.Inspect(R__cl, R__parent, "*fRawTree", &fRawTree);
      R__insp.Inspect(R__cl, R__parent, "*fPairTree", &fPairTree);
      R__insp.Inspect(R__cl, R__parent, "*fConfig", &fConfig);
      R__insp.Inspect(R__cl, R__parent, "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__parent, "fConfFileName", &fConfFileName);
      fConfFileName.ShowMembers(R__insp, strcat(R__parent,"fConfFileName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTreeName", &fTreeName);
      fTreeName.ShowMembers(R__insp, strcat(R__parent,"fTreeName.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaInput(void *p) {
      return  p ? new(p) ::TaInput : new ::TaInput;
   }
   static void *newArray_TaInput(Long_t nElements, void *p) {
      return p ? new(p) ::TaInput[nElements] : new ::TaInput[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaInput(void *p) {
      delete ((::TaInput*)p);
   }
   static void deleteArray_TaInput(void *p) {
      delete [] ((::TaInput*)p);
   }
   static void destruct_TaInput(void *p) {
      typedef ::TaInput current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaInput

//______________________________________________________________________________
void VaAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class VaAna.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void VaAna::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class VaAna.
      TClass *R__cl = ::VaAna::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRedFile", &fRedFile);
      R__insp.Inspect(R__cl, R__parent, "*fPairTree", &fPairTree);
      R__insp.Inspect(R__cl, R__parent, "*fRawTree", &fRawTree);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "*fTxtOut", &fTxtOut);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_VaAna(void *p) {
      return  p ? new(p) ::VaAna : new ::VaAna;
   }
   static void *newArray_VaAna(Long_t nElements, void *p) {
      return p ? new(p) ::VaAna[nElements] : new ::VaAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_VaAna(void *p) {
      delete ((::VaAna*)p);
   }
   static void deleteArray_VaAna(void *p) {
      delete [] ((::VaAna*)p);
   }
   static void destruct_VaAna(void *p) {
      typedef ::VaAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::VaAna

//______________________________________________________________________________
void TaDitAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaDitAna.

   VaAna::Streamer(R__b);
}

//______________________________________________________________________________
void TaDitAna::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaDitAna.
      TClass *R__cl = ::TaDitAna::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fNumCyc", &fNumCyc);
      R__insp.Inspect(R__cl, R__parent, "*fProtoCyc", &fProtoCyc);
      R__insp.Inspect(R__cl, R__parent, "fDitCyc", &fDitCyc);
      fDitCyc.ShowMembers(R__insp, strcat(R__parent,"fDitCyc.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*avgCyc", &avgCyc);
      R__insp.Inspect(R__cl, R__parent, "DetList", (void*)&DetList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DetList, R__insp, strcat(R__parent,"DetList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "MonList", (void*)&MonList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&MonList, R__insp, strcat(R__parent,"MonList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "DitList", (void*)&DitList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DitList, R__insp, strcat(R__parent,"DitList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "CurMon", &CurMon);
      CurMon.ShowMembers(R__insp, strcat(R__parent,"CurMon.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fUseCurMon", &fUseCurMon);
      R__insp.Inspect(R__cl, R__parent, "DitIndex[8]", DitIndex);
      R__insp.Inspect(R__cl, R__parent, "DitMap[8]", DitMap);
      R__insp.Inspect(R__cl, R__parent, "DitLimit[8]", DitLimit);
      R__insp.Inspect(R__cl, R__parent, "RwPanCuts", (void*)&RwPanCuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&RwPanCuts, R__insp, strcat(R__parent,"RwPanCuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fNDet", &fNDet);
      R__insp.Inspect(R__cl, R__parent, "fNDit", &fNDit);
      R__insp.Inspect(R__cl, R__parent, "fNMon", &fNMon);
      R__insp.Inspect(R__cl, R__parent, "fNRwCuts", &fNRwCuts);
      R__insp.Inspect(R__cl, R__parent, "fNPairCuts", &fNPairCuts);
      R__insp.Inspect(R__cl, R__parent, "DetVarList", (void*)&DetVarList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DetVarList, R__insp, strcat(R__parent,"DetVarList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "MonVarList", (void*)&MonVarList);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&MonVarList, R__insp, strcat(R__parent,"MonVarList."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "PrPanCuts", (void*)&PrPanCuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&PrPanCuts, R__insp, strcat(R__parent,"PrPanCuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*curCyc", &curCyc);
      R__insp.Inspect(R__cl, R__parent, "*rootdef", &rootdef);
      VaAna::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaDitAna(void *p) {
      return  p ? new(p) ::TaDitAna : new ::TaDitAna;
   }
   static void *newArray_TaDitAna(Long_t nElements, void *p) {
      return p ? new(p) ::TaDitAna[nElements] : new ::TaDitAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaDitAna(void *p) {
      delete ((::TaDitAna*)p);
   }
   static void deleteArray_TaDitAna(void *p) {
      delete [] ((::TaDitAna*)p);
   }
   static void destruct_TaDitAna(void *p) {
      typedef ::TaDitAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaDitAna

//______________________________________________________________________________
void TaDitCyc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaDitCyc.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void TaDitCyc::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaDitCyc.
      TClass *R__cl = ::TaDitCyc::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fSlps_Done", &fSlps_Done);
      R__insp.Inspect(R__cl, R__parent, "fCoeffs_Done", &fCoeffs_Done);
      R__insp.Inspect(R__cl, R__parent, "fNDetUsed", &fNDetUsed);
      R__insp.Inspect(R__cl, R__parent, "fNMonUsed", &fNMonUsed);
      R__insp.Inspect(R__cl, R__parent, "fNDitUsed", &fNDitUsed);
      R__insp.Inspect(R__cl, R__parent, "fFirstEvNum", &fFirstEvNum);
      R__insp.Inspect(R__cl, R__parent, "fLastSCEvNum", &fLastSCEvNum);
      R__insp.Inspect(R__cl, R__parent, "fLastEvNum", &fLastEvNum);
      R__insp.Inspect(R__cl, R__parent, "fSuperCycNum", &fSuperCycNum);
      R__insp.Inspect(R__cl, R__parent, "fLostEventCounter", &fLostEventCounter);
      R__insp.Inspect(R__cl, R__parent, "fObjCycs[8]", fObjCycs);
      R__insp.Inspect(R__cl, R__parent, "fNEvObj[8]", fNEvObj);
      R__insp.Inspect(R__cl, R__parent, "fDetDSlp[8][20]", fDetDSlp);
      R__insp.Inspect(R__cl, R__parent, "fDetDSlpE[8][20]", fDetDSlpE);
      R__insp.Inspect(R__cl, R__parent, "fMonDSlp[8][10]", fMonDSlp);
      R__insp.Inspect(R__cl, R__parent, "fMonDSlpE[8][10]", fMonDSlpE);
      R__insp.Inspect(R__cl, R__parent, "fDetMonCoef[20][10]", fDetMonCoef);
      R__insp.Inspect(R__cl, R__parent, "fDetMonCoefE[20][10]", fDetMonCoefE);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaDitCyc(void *p) {
      return  p ? new(p) ::TaDitCyc : new ::TaDitCyc;
   }
   static void *newArray_TaDitCyc(Long_t nElements, void *p) {
      return p ? new(p) ::TaDitCyc[nElements] : new ::TaDitCyc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaDitCyc(void *p) {
      delete ((::TaDitCyc*)p);
   }
   static void deleteArray_TaDitCyc(void *p) {
      delete [] ((::TaDitCyc*)p);
   }
   static void destruct_TaDitCyc(void *p) {
      typedef ::TaDitCyc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaDitCyc

//______________________________________________________________________________
void TaRootDitDef::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaRootDitDef.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<TString> &R__stl =  DetNames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TString> &R__stl =  MonNames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TString> &R__stl =  CoilNames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TaRootDitDef::IsA());
   } else {
      R__c = R__b.WriteVersion(TaRootDitDef::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<TString> &R__stl =  DetNames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TString> &R__stl =  MonNames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TString> &R__stl =  CoilNames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TaRootDitDef::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaRootDitDef.
      TClass *R__cl = ::TaRootDitDef::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "DetNames", (void*)&DetNames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DetNames, R__insp, strcat(R__parent,"DetNames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "MonNames", (void*)&MonNames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&MonNames, R__insp, strcat(R__parent,"MonNames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "CoilNames", (void*)&CoilNames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&CoilNames, R__insp, strcat(R__parent,"CoilNames."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaRootDitDef(void *p) {
      return  p ? new(p) ::TaRootDitDef : new ::TaRootDitDef;
   }
   static void *newArray_TaRootDitDef(Long_t nElements, void *p) {
      return p ? new(p) ::TaRootDitDef[nElements] : new ::TaRootDitDef[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaRootDitDef(void *p) {
      delete ((::TaRootDitDef*)p);
   }
   static void deleteArray_TaRootDitDef(void *p) {
      delete [] ((::TaRootDitDef*)p);
   }
   static void destruct_TaRootDitDef(void *p) {
      typedef ::TaRootDitDef current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaRootDitDef

//______________________________________________________________________________
void TaRegression::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaRegression.

   VaAna::Streamer(R__b);
}

//______________________________________________________________________________
void TaRegression::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaRegression.
      TClass *R__cl = ::TaRegression::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "TotEvents", &TotEvents);
      R__insp.Inspect(R__cl, R__parent, "LinearCycles", &LinearCycles);
      R__insp.Inspect(R__cl, R__parent, "*IVStats", &IVStats);
      R__insp.Inspect(R__cl, R__parent, "IVEntries", (void*)&IVEntries);
      ::ROOT::GenericShowMembers("vector<vector<Double_t> >", (void*)&IVEntries, R__insp, strcat(R__parent,"IVEntries."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*DVStats", &DVStats);
      R__insp.Inspect(R__cl, R__parent, "DVEntries", (void*)&DVEntries);
      ::ROOT::GenericShowMembers("vector<vector<Double_t> >", (void*)&DVEntries, R__insp, strcat(R__parent,"DVEntries."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "DVEntriesOrig", (void*)&DVEntriesOrig);
      ::ROOT::GenericShowMembers("vector<vector<Double_t> >", (void*)&DVEntriesOrig, R__insp, strcat(R__parent,"DVEntriesOrig."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "PanCutEntries", (void*)&PanCutEntries);
      ::ROOT::GenericShowMembers("vector<vector<Double_t> >", (void*)&PanCutEntries, R__insp, strcat(R__parent,"PanCutEntries."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "LEvEntries", (void*)&LEvEntries);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&LEvEntries, R__insp, strcat(R__parent,"LEvEntries."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "HEvEntries", (void*)&HEvEntries);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&HEvEntries, R__insp, strcat(R__parent,"HEvEntries."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "GoodEvents", (void*)&GoodEvents);
      ::ROOT::GenericShowMembers("vector<Bool_t>", (void*)&GoodEvents, R__insp, strcat(R__parent,"GoodEvents."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "nGoodEvents", &nGoodEvents);
      R__insp.Inspect(R__cl, R__parent, "mCoeff", (void*)&mCoeff);
      ::ROOT::GenericShowMembers("vector<vector<vector<Double_t> > >", (void*)&mCoeff, R__insp, strcat(R__parent,"mCoeff."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mErrCoeff", (void*)&mErrCoeff);
      ::ROOT::GenericShowMembers("vector<vector<vector<Double_t> > >", (void*)&mErrCoeff, R__insp, strcat(R__parent,"mErrCoeff."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "DVnames", (void*)&DVnames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DVnames, R__insp, strcat(R__parent,"DVnames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "IVnames", (void*)&IVnames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&IVnames, R__insp, strcat(R__parent,"IVnames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "PanCutnames", (void*)&PanCutnames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&PanCutnames, R__insp, strcat(R__parent,"PanCutnames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "PanCuts", (void*)&PanCuts);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&PanCuts, R__insp, strcat(R__parent,"PanCuts."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "minirange", (void*)&minirange);
      ::ROOT::GenericShowMembers("vector<pair<UInt_t,UInt_t> >", (void*)&minirange, R__insp, strcat(R__parent,"minirange."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "minirangeEv", (void*)&minirangeEv);
      ::ROOT::GenericShowMembers("vector<pair<Int_t,Int_t> >", (void*)&minirangeEv, R__insp, strcat(R__parent,"minirangeEv."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "minirun", (void*)&minirun);
      ::ROOT::GenericShowMembers("vector<UInt_t>", (void*)&minirun, R__insp, strcat(R__parent,"minirun."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*rootdef", &rootdef);
      VaAna::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaRegression(void *p) {
      return  p ? new(p) ::TaRegression : new ::TaRegression;
   }
   static void *newArray_TaRegression(Long_t nElements, void *p) {
      return p ? new(p) ::TaRegression[nElements] : new ::TaRegression[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaRegression(void *p) {
      delete ((::TaRegression*)p);
   }
   static void deleteArray_TaRegression(void *p) {
      delete [] ((::TaRegression*)p);
   }
   static void destruct_TaRegression(void *p) {
      typedef ::TaRegression current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaRegression

//______________________________________________________________________________
void TaRootRegDef::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaRootRegDef.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<TString> &R__stl =  IVvarnames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TString> &R__stl =  DVvarnames;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TaRootRegDef::IsA());
   } else {
      R__c = R__b.WriteVersion(TaRootRegDef::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<TString> &R__stl =  IVvarnames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TString> &R__stl =  DVvarnames;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TaRootRegDef::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaRootRegDef.
      TClass *R__cl = ::TaRootRegDef::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "IVvarnames", (void*)&IVvarnames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&IVvarnames, R__insp, strcat(R__parent,"IVvarnames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "DVvarnames", (void*)&DVvarnames);
      ::ROOT::GenericShowMembers("vector<TString>", (void*)&DVvarnames, R__insp, strcat(R__parent,"DVvarnames."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaRootRegDef(void *p) {
      return  p ? new(p) ::TaRootRegDef : new ::TaRootRegDef;
   }
   static void *newArray_TaRootRegDef(Long_t nElements, void *p) {
      return p ? new(p) ::TaRootRegDef[nElements] : new ::TaRootRegDef[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaRootRegDef(void *p) {
      delete ((::TaRootRegDef*)p);
   }
   static void deleteArray_TaRootRegDef(void *p) {
      delete [] ((::TaRootRegDef*)p);
   }
   static void destruct_TaRootRegDef(void *p) {
      typedef ::TaRootRegDef current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaRootRegDef

//______________________________________________________________________________
void TaRedAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class TaRedAna.

   ::Error("TaRedAna::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void TaRedAna::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TaRedAna.
      TClass *R__cl = ::TaRedAna::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fAnalysis", &fAnalysis);
      R__insp.Inspect(R__cl, R__parent, "*fConfig", &fConfig);
      R__insp.Inspect(R__cl, R__parent, "*fInput", &fInput);
      R__insp.Inspect(R__cl, R__parent, "fConfFileName", &fConfFileName);
      fConfFileName.ShowMembers(R__insp, strcat(R__parent,"fConfFileName.")); R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TaRedAna(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaRedAna : new ::TaRedAna;
   }
   static void *newArray_TaRedAna(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TaRedAna[nElements] : new ::TaRedAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_TaRedAna(void *p) {
      delete ((::TaRedAna*)p);
   }
   static void deleteArray_TaRedAna(void *p) {
      delete [] ((::TaRedAna*)p);
   }
   static void destruct_TaRedAna(void *p) {
      typedef ::TaRedAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TaRedAna

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "/u/apps/root/5.26-00/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

/********************************************************
* RedDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRedDict();

extern "C" void G__set_cpp_environmentRedDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TaRedAna.hh");
  G__add_compiledheader("TaConfFile.hh");
  G__add_compiledheader("VaAna.hh");
  G__add_compiledheader("TaRegression.hh");
  G__add_compiledheader("TaInput.hh");
  G__add_compiledheader("TaDitAna.hh");
  G__add_compiledheader("TaDitCyc.hh");
  G__add_compiledheader("Matrix.hh");
  G__add_compiledheader("../../pan/src/TaFileName.hh");
  G__add_compiledheader("../../pan/src/TaString.hh");
  G__add_compiledheader("../../pan/src/TaStatistics.hh");
  G__add_compiledheader("../../pan/src/TaOResultsFile.hh");
  G__cpp_reset_tagtableRedDict();
}
#include <new>
extern "C" int G__cpp_dllrevRedDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TaConfFile */
static int G__RedDict_491_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaConfFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaConfFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaConfFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaConfFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaConfFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaConfFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaConfFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaConfFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaConfFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaConfFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaConfFile[n];
     } else {
       p = new((void*) gvp) TaConfFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaConfFile;
     } else {
       p = new((void*) gvp) TaConfFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaConfFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaConfFile*) G__getstructoffset())->Read();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaConfFile*) G__getstructoffset())->Read(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaConfFile*) G__getstructoffset())->Load();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetAnaType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetTreeType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetRegressType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetMatrixChoice();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetRegressMinirun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaConfFile*) G__getstructoffset())->MinirunUsesCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetRegressCycles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetIVNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetDVNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetIV((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetDV((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetIVNames();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetDVNames();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetDetNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetMonNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetDitNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetDet((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetMon((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetDit((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetCurMon();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaConfFile*) G__getstructoffset())->UseCurMon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetDetList();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetMonList();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetDitList();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetRootAnaType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaConfFile*) G__getstructoffset())->GetCommentTag();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetPanCuts();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetRawCuts();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TString>* pobj;
         vector<TString> xobj = ((TaConfFile*) G__getstructoffset())->GetPairCuts();
         pobj = new vector<TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<TString,TString>* pobj;
         pair<TString,TString> xobj = ((TaConfFile*) G__getstructoffset())->GetCustomCut();
         pobj = new pair<TString,TString>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TaConfFile*) G__getstructoffset())->GetCksum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaConfFile*) G__getstructoffset())->GetDitLimNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<TString,Double_t> >* pobj;
         vector<pair<TString,Double_t> > xobj = ((TaConfFile*) G__getstructoffset())->GetDitLimList();
         pobj = new vector<pair<TString,Double_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_491_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaConfFile*) G__getstructoffset())->GetDitLimit(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_491_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaConfFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaConfFile(*(TaConfFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaConfFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaConfFile G__TTaConfFile;
static int G__RedDict_491_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaConfFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaConfFile*) (soff+(sizeof(TaConfFile)*i)))->~G__TTaConfFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaConfFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaConfFile*) (soff))->~G__TTaConfFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaInput */
static int G__RedDict_492_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaInput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaInput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaInput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaInput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaInput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaInput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaInput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaInput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaInput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaInput* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaInput[n];
     } else {
       p = new((void*) gvp) TaInput[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaInput;
     } else {
       p = new((void*) gvp) TaInput;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaInput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaInput* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaInput(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TaInput(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaInput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaInput*) G__getstructoffset())->Init((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaInput*) G__getstructoffset())->Init(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaInput*) G__getstructoffset())->CommonInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaConfFile& obj = ((const TaInput*) G__getstructoffset())->GetConfig();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TFile& obj = ((const TaInput*) G__getstructoffset())->GetPanFile();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaInput*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTree& obj = ((const TaInput*) G__getstructoffset())->GetRawTree();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_492_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTree& obj = ((const TaInput*) G__getstructoffset())->GetPairTree();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_492_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaInput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaInput(*(TaInput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaInput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaInput G__TTaInput;
static int G__RedDict_492_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaInput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaInput*) (soff+(sizeof(TaInput)*i)))->~G__TTaInput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaInput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaInput*) (soff))->~G__TTaInput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_492_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaInput* dest = (TaInput*) G__getstructoffset();
   *dest = *(TaInput*) libp->para[0].ref;
   const TaInput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaOResultsFile */
static int G__RedDict_493_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaOResultsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const RunNumber_t) G__int(libp->para[1])
, *((const string*) G__int(libp->para[2])), (const UInt_t) G__int(libp->para[3])
, *((const string*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const RunNumber_t) G__int(libp->para[1])
, *((const string*) G__int(libp->para[2])), (const UInt_t) G__int(libp->para[3])
, *((const string*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const RunNumber_t) G__int(libp->para[1])
, *((const string*) G__int(libp->para[2])), (const UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const RunNumber_t) G__int(libp->para[1])
, *((const string*) G__int(libp->para[2])), (const UInt_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaOResultsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaOResultsFile(
(const char*) G__int(libp->para[0]), (const RunNumber_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TaOResultsFile(
(const char*) G__int(libp->para[0]), (const RunNumber_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaOResultsFile(
(const char*) G__int(libp->para[0]), (const RunNumber_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TaOResultsFile(
(const char*) G__int(libp->para[0]), (const RunNumber_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaOResultsFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const char*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TaOResultsFile(
*((const string*) G__int(libp->para[0])), (const char*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaOResultsFile*) G__getstructoffset())->WriteNextLine(
*((const string*) G__int(libp->para[0])), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const EventNumber_t) G__int(libp->para[3])
, (const EventNumber_t) G__int(libp->para[4]), *((const string*) G__int(libp->para[5]))
, *((const string*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaOResultsFile*) G__getstructoffset())->WriteNextLine(
(const char*) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const EventNumber_t) G__int(libp->para[3])
, (const EventNumber_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaOResultsFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaOResultsFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaOResultsFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaOResultsFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TaOResultsFile*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaOResultsFile*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaOResultsFile*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaOResultsFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaOResultsFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaOResultsFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaOResultsFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_493_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaOResultsFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaOResultsFile G__TTaOResultsFile;
static int G__RedDict_493_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaOResultsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaOResultsFile*) (soff+(sizeof(TaOResultsFile)*i)))->~G__TTaOResultsFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaOResultsFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaOResultsFile*) (soff))->~G__TTaOResultsFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaFileName */
static int G__RedDict_494_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName[n];
     } else {
       p = new((void*) gvp) TaFileName[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName;
     } else {
       p = new((void*) gvp) TaFileName;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])), *((const string*) G__int(libp->para[3]))
, *((const string*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])), *((const string*) G__int(libp->para[3]))
, *((const string*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])), *((const string*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])), *((const string*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TaFileName(
(const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
*((const string*) G__int(libp->para[0])), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) TaFileName(
*((const string*) G__int(libp->para[0])), *((const string*) G__int(libp->para[1]))
, *((const string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(*((const string*) G__int(libp->para[0])), *((const string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TaFileName(*((const string*) G__int(libp->para[0])), *((const string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(*((const string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TaFileName(*((const string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TaFileName(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TaFileName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaFileName((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TaFileName((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaFileName* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaFileName(*(TaFileName*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TaFileName(*(TaFileName*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaFileName& obj = ((TaFileName*) G__getstructoffset())->operator=(*(TaFileName*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaFileName::Setup((const RunNumber_t) G__int(libp->para[0]), *((const string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaFileName::Setup((const RunNumber_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((TaFileName*) G__getstructoffset())->String();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaFileName*) G__getstructoffset())->Tstring();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaFileName::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaFileName::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaFileName::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaFileName::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TaFileName*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaFileName*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaFileName*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaFileName*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaFileName::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaFileName::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaFileName::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_494_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaFileName::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaFileName G__TTaFileName;
static int G__RedDict_494_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaFileName*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaFileName*) (soff+(sizeof(TaFileName)*i)))->~G__TTaFileName();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaFileName*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaFileName*) (soff))->~G__TTaFileName();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VaAna */
static int G__RedDict_495_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VaAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VaAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VaAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VaAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VaAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VaAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VaAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VaAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VaAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VaAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VaAna[n];
     } else {
       p = new((void*) gvp) VaAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VaAna;
     } else {
       p = new((void*) gvp) VaAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_VaAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((VaAna*) G__getstructoffset())->Init(*(TaInput*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VaAna*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VaAna*) G__getstructoffset())->End();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_495_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VaAna*) G__getstructoffset())->OutputResults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_495_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   VaAna* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new VaAna(*(VaAna*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_VaAna));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VaAna G__TVaAna;
static int G__RedDict_495_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VaAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VaAna*) (soff+(sizeof(VaAna)*i)))->~G__TVaAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VaAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VaAna*) (soff))->~G__TVaAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_495_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VaAna* dest = (VaAna*) G__getstructoffset();
   *dest = *(VaAna*) libp->para[0].ref;
   const VaAna& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaString */
static int G__RedDict_496_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaString* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaString[n];
     } else {
       p = new((void*) gvp) TaString[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaString;
     } else {
       p = new((void*) gvp) TaString;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaString* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaString(*((const string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TaString(*((const string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaString* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaString((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TaString((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaString));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TaString*) G__getstructoffset())->CmpNoCase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const vector<string>* pobj;
         const vector<string> xobj = ((const TaString*) G__getstructoffset())->Split((size_t) G__int(libp->para[0]));
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<string>* pobj;
         const vector<string> xobj = ((const TaString*) G__getstructoffset())->Split();
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TaString*) G__getstructoffset())->Hex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaString* pobj;
         const TaString xobj = ((const TaString*) G__getstructoffset())->ToLower();
         pobj = new TaString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaString* pobj;
         const TaString xobj = ((const TaString*) G__getstructoffset())->ToUpper();
         pobj = new TaString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TaString* pobj;
         TaString xobj = ((TaString*) G__getstructoffset())->RemoveChar((const char*) G__int(libp->para[0]));
         pobj = new TaString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaString::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaString::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaString::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaString::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TaString*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaString*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaString*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaString*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaString::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaString::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaString::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_496_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaString::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_496_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaString* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaString(*(TaString*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaString));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaString G__TTaString;
static int G__RedDict_496_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaString*) (soff+(sizeof(TaString)*i)))->~G__TTaString();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaString*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaString*) (soff))->~G__TTaString();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_496_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaString* dest = (TaString*) G__getstructoffset();
   *dest = *(TaString*) libp->para[0].ref;
   const TaString& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaRedAna */
static int G__RedDict_511_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaRedAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRedAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaRedAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaRedAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TaRedAna*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRedAna*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRedAna*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRedAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRedAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRedAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRedAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRedAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRedAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRedAna[n];
     } else {
       p = new((void*) gvp) TaRedAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRedAna;
     } else {
       p = new((void*) gvp) TaRedAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRedAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRedAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaRedAna(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) TaRedAna(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRedAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRedAna*) G__getstructoffset())->Init((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRedAna*) G__getstructoffset())->Init(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRedAna*) G__getstructoffset())->CommonInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRedAna*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_511_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRedAna*) G__getstructoffset())->End();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_511_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaRedAna* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaRedAna(*(TaRedAna*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRedAna));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaRedAna G__TTaRedAna;
static int G__RedDict_511_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaRedAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaRedAna*) (soff+(sizeof(TaRedAna)*i)))->~G__TTaRedAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaRedAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaRedAna*) (soff))->~G__TTaRedAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_511_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRedAna* dest = (TaRedAna*) G__getstructoffset();
   *dest = *(TaRedAna*) libp->para[0].ref;
   const TaRedAna& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaStatistics */
static int G__RedDict_512_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaStatistics* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaStatistics((const size_t) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TaStatistics((const size_t) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaStatistics((const size_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TaStatistics((const size_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaStatistics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaStatistics* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaStatistics(*(TaStatistics*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TaStatistics(*(TaStatistics*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaStatistics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaStatistics& obj = ((TaStatistics*) G__getstructoffset())->operator=(*(TaStatistics*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaStatistics*) G__getstructoffset())->Zero();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TaStatistics*) G__getstructoffset())->Update(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref);
      G__setnull(result7);
      break;
   case 2:
      ((TaStatistics*) G__getstructoffset())->Update(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((TaStatistics*) G__getstructoffset())->Update(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TaStatistics*) G__getstructoffset())->Update((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TaStatistics*) G__getstructoffset())->Update((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TaStatistics*) G__getstructoffset())->Update((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TaStatistics& obj = ((TaStatistics*) G__getstructoffset())->operator+=(*(TaStatistics*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TaStatistics*) G__getstructoffset())->N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TaStatistics*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->DataRMS();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->Mean();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->MeanVar();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->MeanErr();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<Double_t,Double_t> >* pobj;
         const vector<pair<Double_t,Double_t> > xobj = ((const TaStatistics*) G__getstructoffset())->MeanAndErr();
         pobj = new vector<pair<Double_t,Double_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->Neff();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TaStatistics*) G__getstructoffset())->DataRMS((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TaStatistics*) G__getstructoffset())->Mean((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TaStatistics*) G__getstructoffset())->MeanVar((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TaStatistics*) G__getstructoffset())->MeanErr((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<Double_t,Double_t>* pobj;
         const pair<Double_t,Double_t> xobj = ((const TaStatistics*) G__getstructoffset())->MeanAndErr((const size_t) G__int(libp->para[0]));
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TaStatistics*) G__getstructoffset())->Neff((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaStatistics*) G__getstructoffset())->SetFirstPass((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TaStatistics*) G__getstructoffset())->DumpSums((const size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaStatistics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaStatistics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaStatistics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaStatistics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TaStatistics*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaStatistics*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaStatistics*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaStatistics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaStatistics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaStatistics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaStatistics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_512_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaStatistics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaStatistics G__TTaStatistics;
static int G__RedDict_512_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaStatistics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaStatistics*) (soff+(sizeof(TaStatistics)*i)))->~G__TTaStatistics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaStatistics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaStatistics*) (soff))->~G__TTaStatistics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaRootRegDef */
static int G__RedDict_513_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRootRegDef* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRootRegDef[n];
     } else {
       p = new((void*) gvp) TaRootRegDef[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRootRegDef;
     } else {
       p = new((void*) gvp) TaRootRegDef;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootRegDef*) G__getstructoffset())->PutIV(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootRegDef*) G__getstructoffset())->PutDV(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TaRootRegDef*) G__getstructoffset())->GetIVNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TaRootRegDef*) G__getstructoffset())->GetDVNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaRootRegDef*) G__getstructoffset())->GetIVName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaRootRegDef*) G__getstructoffset())->GetDVName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootRegDef*) G__getstructoffset())->GetIVIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootRegDef*) G__getstructoffset())->GetDVIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootRegDef*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootRegDef*) G__getstructoffset())->Usage();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaRootRegDef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootRegDef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaRootRegDef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaRootRegDef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootRegDef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootRegDef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRootRegDef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootRegDef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_513_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRootRegDef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_513_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaRootRegDef* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaRootRegDef(*(TaRootRegDef*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaRootRegDef G__TTaRootRegDef;
static int G__RedDict_513_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaRootRegDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaRootRegDef*) (soff+(sizeof(TaRootRegDef)*i)))->~G__TTaRootRegDef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaRootRegDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaRootRegDef*) (soff))->~G__TTaRootRegDef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_513_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRootRegDef* dest = (TaRootRegDef*) G__getstructoffset();
   *dest = *(TaRootRegDef*) libp->para[0].ref;
   const TaRootRegDef& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaRegression */
static int G__RedDict_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaRegression::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRegression::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaRegression::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaRegression::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRegression::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRegression::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRegression::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRegression::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRegression* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRegression[n];
     } else {
       p = new((void*) gvp) TaRegression[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRegression;
     } else {
       p = new((void*) gvp) TaRegression;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRegression));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->LinearInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->MatrixInit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->ProcessLinear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->ProcessMatrix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->FillTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->WriteStats((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRegression*) G__getstructoffset())->WriteSlopes((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaRegression G__TTaRegression;
static int G__RedDict_514_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaRegression*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaRegression*) (soff+(sizeof(TaRegression)*i)))->~G__TTaRegression();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaRegression*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaRegression*) (soff))->~G__TTaRegression();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaDitCyc */
static int G__RedDict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaDitCyc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitCyc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaDitCyc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaDitCyc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitCyc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaDitCyc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitCyc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaDitCyc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaDitCyc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaDitCyc[n];
     } else {
       p = new((void*) gvp) TaDitCyc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaDitCyc;
     } else {
       p = new((void*) gvp) TaDitCyc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaDitCyc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaDitCyc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TaDitCyc(*(TaDitCyc*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TaDitCyc(*(TaDitCyc*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaDitCyc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TaDitCyc*) G__getstructoffset())->Clone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitCyc*) G__getstructoffset())->Merge((TaDitCyc*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TaDitCyc*) G__getstructoffset())->Copy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitCyc*) G__getstructoffset())->IsCompatible((TaDitCyc*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->LoadData((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->CalcSlopes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->CalcCoeffs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetDetNum((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetMonNum((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetDitNum((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetFirstEvent((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetLastSCEvent((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetLastEvent((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->SetSuperCycleNumber((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitCyc*) G__getstructoffset())->StepLostEventCounter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetNumDit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetNumDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetNumMon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetFirstEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetLastSCEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetLastEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetSuperCycleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetLostEventCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitCyc*) G__getstructoffset())->SlopesAreDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitCyc*) G__getstructoffset())->CoeffsAreDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitCyc*) G__getstructoffset())->CalcsAreDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetSlopeDetVDit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetErrSlopeDetVDit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetSlopeMonVDit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetErrSlopeMonVDit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetCoeffDetVMon((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetErrCoeffDetVMon((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetModVal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetMonVal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TaDitCyc*) G__getstructoffset())->GetDetVal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TaDitCyc*) G__getstructoffset())->GetModVals((Int_t) G__int(libp->para[0]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TaDitCyc*) G__getstructoffset())->GetMonVals((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Double_t>* pobj;
         vector<Double_t> xobj = ((TaDitCyc*) G__getstructoffset())->GetDetVals((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_590_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaDitCyc*) G__getstructoffset())->GetNDatForModIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaDitCyc G__TTaDitCyc;
static int G__RedDict_590_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaDitCyc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaDitCyc*) (soff+(sizeof(TaDitCyc)*i)))->~G__TTaDitCyc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaDitCyc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaDitCyc*) (soff))->~G__TTaDitCyc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_590_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaDitCyc* dest = (TaDitCyc*) G__getstructoffset();
   *dest = *(TaDitCyc*) libp->para[0].ref;
   const TaDitCyc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaRootDitDef */
static int G__RedDict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRootDitDef* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRootDitDef[n];
     } else {
       p = new((void*) gvp) TaRootDitDef[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaRootDitDef;
     } else {
       p = new((void*) gvp) TaRootDitDef;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->PutDetector(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->PutMonitor(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->PutCoil(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaRootDitDef*) G__getstructoffset())->GetDetectorName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaRootDitDef*) G__getstructoffset())->GetMonitorName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TaRootDitDef*) G__getstructoffset())->GetCoilName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetDetectorIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetMonitorIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetCoilIndex(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetNumDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetNumMonitors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TaRootDitDef*) G__getstructoffset())->GetNumCoils());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->Usage();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaRootDitDef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootDitDef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaRootDitDef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaRootDitDef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaRootDitDef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootDitDef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRootDitDef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaRootDitDef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_592_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaRootDitDef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RedDict_592_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TaRootDitDef* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TaRootDitDef(*(TaRootDitDef*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaRootDitDef G__TTaRootDitDef;
static int G__RedDict_592_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaRootDitDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaRootDitDef*) (soff+(sizeof(TaRootDitDef)*i)))->~G__TTaRootDitDef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaRootDitDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaRootDitDef*) (soff))->~G__TTaRootDitDef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RedDict_592_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaRootDitDef* dest = (TaRootDitDef*) G__getstructoffset();
   *dest = *(TaRootDitDef*) libp->para[0].ref;
   const TaRootDitDef& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TaDitAna */
static int G__RedDict_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TaDitAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TaDitAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TaDitAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaDitAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TaDitAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TaDitAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TaDitAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaDitAna[n];
     } else {
       p = new((void*) gvp) TaDitAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TaDitAna;
     } else {
       p = new((void*) gvp) TaDitAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RedDictLN_TaDitAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitAna*) G__getstructoffset())->ComputeDitCoeffs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitAna*) G__getstructoffset())->LoadModData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitAna*) G__getstructoffset())->OutputSlopes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitAna*) G__getstructoffset())->FillSlopesTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TaDitAna*) G__getstructoffset())->CorrectPairTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RedDict_593_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TaDitAna*) G__getstructoffset())->PrintCycResults((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TaDitAna G__TTaDitAna;
static int G__RedDict_593_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TaDitAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TaDitAna*) (soff+(sizeof(TaDitAna)*i)))->~G__TTaDitAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TaDitAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TaDitAna*) (soff))->~G__TTaDitAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TaConfFile */

/* TaInput */

/* TaOResultsFile */

/* TaFileName */

/* VaAna */

/* TaString */

/* TaRedAna */

/* TaStatistics */

/* TaRootRegDef */

/* TaRegression */

/* TaDitCyc */

/* TaRootDitDef */

/* TaDitAna */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRedDict {
 public:
  G__Sizep2memfuncRedDict(): p(&G__Sizep2memfuncRedDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRedDict::*p)();
};

size_t G__get_sizep2memfuncRedDict()
{
  G__Sizep2memfuncRedDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_TaOResultsFile_basic_ioslEcharcOchar_traitslEchargRsPgR_2(long pobject) {
  TaOResultsFile *G__Lderived=(TaOResultsFile*)pobject;
  basic_ios<char,char_traits<char> > *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_TaOResultsFile_ios_base_3(long pobject) {
  TaOResultsFile *G__Lderived=(TaOResultsFile*)pobject;
  ios_base *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRedDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaConfFile))) {
     TaConfFile *G__Lderived;
     G__Lderived=(TaConfFile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaConfFile),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaInput))) {
     TaInput *G__Lderived;
     G__Lderived=(TaInput*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaInput),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile))) {
     TaOResultsFile *G__Lderived;
     G__Lderived=(TaOResultsFile*)0x1000;
     {
       basic_ofstream<char,char_traits<char> > *G__Lpbase=(basic_ofstream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),G__get_linked_tagnum(&G__RedDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       basic_ostream<char,char_traits<char> > *G__Lpbase=(basic_ostream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),G__get_linked_tagnum(&G__RedDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),G__get_linked_tagnum(&G__RedDictLN_basic_ioslEcharcOchar_traitslEchargRsPgR),(long)G__2vbo_TaOResultsFile_basic_ioslEcharcOchar_traitslEchargRsPgR_2,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),G__get_linked_tagnum(&G__RedDictLN_ios_base),(long)G__2vbo_TaOResultsFile_ios_base_3,1,6);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_VaAna))) {
     VaAna *G__Lderived;
     G__Lderived=(VaAna*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_VaAna),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaString))) {
     TaString *G__Lderived;
     G__Lderived=(TaString*)0x1000;
     {
       string *G__Lpbase=(string*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaString),G__get_linked_tagnum(&G__RedDictLN_string),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef))) {
     TaRootRegDef *G__Lderived;
     G__Lderived=(TaRootRegDef*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaRegression))) {
     TaRegression *G__Lderived;
     G__Lderived=(TaRegression*)0x1000;
     {
       VaAna *G__Lpbase=(VaAna*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaRegression),G__get_linked_tagnum(&G__RedDictLN_VaAna),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaRegression),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaDitCyc))) {
     TaDitCyc *G__Lderived;
     G__Lderived=(TaDitCyc*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitCyc),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef))) {
     TaRootDitDef *G__Lderived;
     G__Lderived=(TaRootDitDef*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RedDictLN_TaDitAna))) {
     TaDitAna *G__Lderived;
     G__Lderived=(TaDitAna*)0x1000;
     {
       VaAna *G__Lpbase=(VaAna*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitAna),G__get_linked_tagnum(&G__RedDictLN_VaAna),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitAna),G__get_linked_tagnum(&G__RedDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRedDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEstringcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_string));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<TString,Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_pairlETStringcOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TString,Double_t> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TString,double> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Bool_t>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<Double_t> > >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__RedDictLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,UInt_t> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,unsigned int> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__RedDictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RedDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RunNumber_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EventNumber_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__RedDictLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Double_t,Double_t> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TaConfFile */
static void G__setup_memvarTaConfFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaConfFile));
   { TaConfFile *p; p=(TaConfFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fConfFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_string),-1,-1,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCksum=",0,"Checksum");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"analysis=",0,"Type of Analysis to Run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"regtype=",0,"Type of Regression Analysis to Run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"regmatrixchoice=",0,"Decision to calc coeffs/regress quantities");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"treetype=",0,"Type of Tree type to Run");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"minirunevt=",0,"Number of pairs/minirun");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"usecuts=",0,"True of minirun is defined by pairs passing cuts");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"cycles=",0,"Number of linear regression cycles.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"iv=",0,"String Array of independent variables");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"dv=",0,"String Array of dependent variables");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"pancuts=",0,"Defined PAN Cuts");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"rawcuts=",0,"Defined PAN RawTree Cuts");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"paircuts=",0,"Defined PAN PairTree Cuts");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"rootanatype=",0,"string name of analysis type for input root file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"commenttag=",0,"comment tag for output files (root and res)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"monList=",0,"String Array of independent variables (monitors)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"detList=",0,"String Array of dependent variables  (detectors)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"ditList=",0,"String Array of dithering objects (coils + cavity)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"curmon=",0,"String name of monitor used for current normalization");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseCurMon=",0,"Bool to flag use of curmon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_pairlETStringcOTStringgR),-1,-1,4,"customcut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR),G__defined_typename("vector<pair<TString,Double_t> >"),-1,4,"ditLimList=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaInput */
static void G__setup_memvarTaInput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaInput));
   { TaInput *p; p=(TaInput*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TFile),-1,-1,4,"fPanFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TTree),-1,-1,4,"fRawTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TTree),-1,-1,4,"fPairTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaConfFile),-1,-1,4,"fConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"fConfFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"fTreeName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaOResultsFile */
static void G__setup_memvarTaOResultsFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile));
   { TaOResultsFile *p; p=(TaOResultsFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_string),-1,-1,4,"fPtag=",0,"program tag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaFileName */
static void G__setup_memvarTaFileName(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   { TaFileName *p; p=(TaFileName*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_string),-1,-1,4,"fFileName=",0,"full path and file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VaAna */
static void G__setup_memvarVaAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_VaAna));
   { VaAna *p; p=(VaAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TFile),-1,-1,2,"fRedFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TTree),-1,-1,2,"fPairTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TTree),-1,-1,2,"fRawTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaInput),-1,-1,2,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTxtOut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),-1,-1,1,"fTxtOut=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaString */
static void G__setup_memvarTaString(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaString));
   { TaString *p; p=(TaString*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaRedAna */
static void G__setup_memvarTaRedAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaRedAna));
   { TaRedAna *p; p=(TaRedAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAnalysis)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_VaAna),-1,-1,1,"fAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaConfFile),-1,-1,4,"fConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaInput),-1,-1,4,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,4,"fConfFileName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaStatistics */
static void G__setup_memvarTaStatistics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaStatistics));
   { TaStatistics *p; p=(TaStatistics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fGoodErrors=",0,"update functions will pass good errors");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFirstPass=",0,"First or second pass?");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fN=",0,"sum of 1 (= N)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fN2=",0,"sum of 1 (= N) for second pass");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWt=",0,"sum of weights");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWt2=",0,"sum of weights^2");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWtX=",0,"sum of weights * x");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWtX2=",0,"sum of weights * x^2");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWt2Err2=",0,"sum of weights^2 * error^2");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fXbar=",0,"means of x from first pass");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWtXs=",0,"sum of weights * (x-<x>)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumWtXs2=",0,"sum of weights * (x-<x>)^2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaRootRegDef */
static void G__setup_memvarTaRootRegDef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef));
   { TaRootRegDef *p; p=(TaRootRegDef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"IVvarnames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"DVvarnames=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaRegression */
static void G__setup_memvarTaRegression(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaRegression));
   { TaRegression *p; p=(TaRegression*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"TotEvents=",0,"Total number of events in tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"LinearCycles=",0,"Number of linear cycles to do");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaStatistics),-1,-1,4,"IVStats=",0,"IV Statistics");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"IVEntries=",0,"IV Entries in pair tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaStatistics),-1,-1,4,"DVStats=",0,"DV Statistics");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"DVEntries=",0,"DV Entries  in pair tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"DVEntriesOrig=",0,"DV Entries in pair tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<Double_t> >"),-1,4,"PanCutEntries=",0,"Pan Cut Entries in pair tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"LEvEntries=",0,"evt_ev_num (low) for entries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"HEvEntries=",0,"evt_ev_num (high) for entries");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<Bool_t>"),-1,4,"GoodEvents=",0,"Events that Pass all Cuts");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nGoodEvents=",0,"number of Good Events");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<Double_t> > >"),-1,4,"mCoeff=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<Double_t> > >"),-1,4,"mErrCoeff=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"DVnames=",0,"DV Names.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"IVnames=",0,"IV Names.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"PanCutnames=",0,"Pan Cut Names.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"PanCuts=",0,"Pan Cuts defined from leafs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),G__defined_typename("vector<pair<UInt_t,UInt_t> >"),-1,4,"minirange=",0,"First is pair tree entry# low, ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),G__defined_typename("vector<pair<Int_t,Int_t> >"),-1,4,"minirangeEv=",0,"First is event low, ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,4,"minirun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef),-1,-1,4,"rootdef=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaDitCyc */
static void G__setup_memvarTaDitCyc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitCyc));
   { TaDitCyc *p; p=(TaDitCyc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgMaxModObj=8",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgMaxDet=20",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgMaxMon=10",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSlps_Done)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSlps_Done=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCoeffs_Done)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fCoeffs_Done=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNDetUsed)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNDetUsed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNMonUsed)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNMonUsed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNDitUsed)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNDitUsed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFirstEvNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFirstEvNum=",0,"** first event of the first supercycle");
   G__memvar_setup((void*)((long)(&p->fLastSCEvNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLastSCEvNum=",0,"** last event of the last supercycle");
   G__memvar_setup((void*)((long)(&p->fLastEvNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLastEvNum=",0,"** last event valid for this TaDitCyc");
   G__memvar_setup((void*)((long)(&p->fSuperCycNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSuperCycNum=",0,"** supercycle number");
   G__memvar_setup((void*)((long)(&p->fLostEventCounter)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fLostEventCounter=",0,"** count number of events lost to cuts");
   G__memvar_setup((void*)((long)(&p->fObjCycs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_TaDitCyccLcLObjCyc),-1,-1,1,"fObjCycs[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNEvObj)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNEvObj[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDetDSlp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDetDSlp[8][20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDetDSlpE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDetDSlpE[8][20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMonDSlp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMonDSlp[8][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMonDSlpE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fMonDSlpE[8][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDetMonCoef)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDetMonCoef[20][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDetMonCoefE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDetMonCoefE[20][10]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaRootDitDef */
static void G__setup_memvarTaRootDitDef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef));
   { TaRootDitDef *p; p=(TaRootDitDef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"DetNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"MonNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"CoilNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TaDitAna */
static void G__setup_memvarTaDitAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitAna));
   { TaDitAna *p; p=(TaDitAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RedDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgNCoils=8",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgMxNDet=20",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"fgMxNMon=10",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNumCyc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNumCyc=",0,"number of supercycles in input data file.");
   G__memvar_setup((void*)((long)(&p->fProtoCyc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaDitCyc),-1,-1,1,"fProtoCyc=",0,"prototype supercycle object");
   G__memvar_setup((void*)((long)(&p->fDitCyc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_TObjArray),-1,-1,1,"fDitCyc=",0,"array of TaDitCyc, one for each supercycle");
   G__memvar_setup((void*)((long)(&p->avgCyc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaDitCyc),-1,-1,1,"avgCyc=",0,"grand average TaDitCyc, merged from all others");
   G__memvar_setup((void*)((long)(&p->DetList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"DetList=",0,"Det Names.");
   G__memvar_setup((void*)((long)(&p->MonList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"MonList=",0,"Mon Names.");
   G__memvar_setup((void*)((long)(&p->DitList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"DitList=",0,"Dit Names.");
   G__memvar_setup((void*)((long)(&p->CurMon)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_TString),-1,-1,1,"CurMon=",0,"current monitor name");
   G__memvar_setup((void*)((long)(&p->fUseCurMon)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fUseCurMon=",0,"Bool to flag use of current monitor");
   G__memvar_setup((void*)((long)(&p->DitIndex)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"DitIndex[8]=",0,"Index used in raw data to represent each coil");
   G__memvar_setup((void*)((long)(&p->DitMap)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"DitMap[8]=",0,"pointer to used-coil list, ");
   G__memvar_setup((void*)((long)(&p->DitLimit)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"DitLimit[8]=",0,"limits for each coil, indexed by used coil");
   G__memvar_setup((void*)((long)(&p->RwPanCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"RwPanCuts=",0,"Pan Cuts defined from Raw leafs");
   G__memvar_setup((void*)((long)(&p->fNDet)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNDet=",0,"number of detectors used");
   G__memvar_setup((void*)((long)(&p->fNDit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNDit=",0,"number of coils used");
   G__memvar_setup((void*)((long)(&p->fNMon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNMon=",0,"number of monitors used");
   G__memvar_setup((void*)((long)(&p->fNRwCuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNRwCuts=",0,"number of cuts applied to raw tree leaves");
   G__memvar_setup((void*)((long)(&p->fNPairCuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNPairCuts=",0,"number of cuts applied to pair tree leaves");
   G__memvar_setup((void*)((long)(&p->DetVarList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"DetVarList=",0,"Det asym Names.");
   G__memvar_setup((void*)((long)(&p->MonVarList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"MonVarList=",0,"Mon diff Names.");
   G__memvar_setup((void*)((long)(&p->PrPanCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"PrPanCuts=",0,"Pan Cuts defined from Pair leafs");
   G__memvar_setup((void*)((long)(&p->curCyc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaDitCyc),-1,-1,1,"curCyc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rootdef)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef),-1,-1,1,"rootdef=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRedDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTaConfFile(void) {
   /* TaConfFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaConfFile));
   G__memfunc_setup("Class",502,G__RedDict_491_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaConfFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_491_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaConfFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_491_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaConfFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_491_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaConfFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_491_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_491_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaConfFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_491_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaConfFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_491_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaConfFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_491_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaConfFile::DeclFileLine) ), 0);
   G__memfunc_setup("TaConfFile",955,G__RedDict_491_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaConfFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__RedDict_491_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__RedDict_491_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__RedDict_491_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnaType",978,G__RedDict_491_0_17, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeType",1106,G__RedDict_491_0_18, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegressType",1437,G__RedDict_491_0_19, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatrixChoice",1504,G__RedDict_491_0_20, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegressMinirun",1757,G__RedDict_491_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MinirunUsesCuts",1569,G__RedDict_491_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegressCycles",1630,G__RedDict_491_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVNum",751,G__RedDict_491_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDVNum",746,G__RedDict_491_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIV",447,G__RedDict_491_0_26, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDV",442,G__RedDict_491_0_27, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVNames",947,G__RedDict_491_0_28, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDVNames",942,G__RedDict_491_0_29, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetNum",877,G__RedDict_491_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonNum",890,G__RedDict_491_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDitNum",881,G__RedDict_491_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDet",573,G__RedDict_491_0_33, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMon",586,G__RedDict_491_0_34, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDit",577,G__RedDict_491_0_35, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurMon",884,G__RedDict_491_0_36, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseCurMon",897,G__RedDict_491_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetList",985,G__RedDict_491_0_38, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonList",998,G__RedDict_491_0_39, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDitList",989,G__RedDict_491_0_40, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRootAnaType",1398,G__RedDict_491_0_41, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCommentTag",1295,G__RedDict_491_0_42, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPanCuts",990,G__RedDict_491_0_43, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawCuts",1001,G__RedDict_491_0_44, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPairCuts",1099,G__RedDict_491_0_45, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR), G__defined_typename("vector<TString>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCustomCut",1223,G__RedDict_491_0_46, 117, G__get_linked_tagnum(&G__RedDictLN_pairlETStringcOTStringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCksum",803,G__RedDict_491_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDitLimNum",1171,G__RedDict_491_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDitLimList",1279,G__RedDict_491_0_49, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR), G__defined_typename("vector<pair<TString,Double_t> >"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDitLimit",1088,G__RedDict_491_0_50, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - ditobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseLine",899,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'vector<string,allocator<string> >' 'vector<string>' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadCksum",899,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 10 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TaConfFile", 955, G__RedDict_491_0_54, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaConfFile), -1, 0, 1, 1, 1, 0, "u 'TaConfFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaConfFile", 1081, G__RedDict_491_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaInput(void) {
   /* TaInput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaInput));
   G__memfunc_setup("Class",502,G__RedDict_492_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaInput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_492_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaInput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_492_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaInput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_492_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaInput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_492_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_492_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaInput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_492_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaInput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_492_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaInput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_492_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaInput::DeclFileLine) ), 0);
   G__memfunc_setup("TaInput",709,G__RedDict_492_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaInput), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaInput",709,G__RedDict_492_0_14, 105, G__get_linked_tagnum(&G__RedDictLN_TaInput), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__RedDict_492_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__RedDict_492_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommonInit",1021,G__RedDict_492_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfig",886,G__RedDict_492_0_18, 117, G__get_linked_tagnum(&G__RedDictLN_TaConfFile), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPanFile",959,G__RedDict_492_0_19, 117, G__get_linked_tagnum(&G__RedDictLN_TFile), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__RedDict_492_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTree",986,G__RedDict_492_0_21, 117, G__get_linked_tagnum(&G__RedDictLN_TTree), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPairTree",1084,G__RedDict_492_0_22, 117, G__get_linked_tagnum(&G__RedDictLN_TTree), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TaInput", 709, G__RedDict_492_0_23, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaInput), -1, 0, 1, 1, 1, 0, "u 'TaInput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaInput", 835, G__RedDict_492_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_492_0_25, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaInput), -1, 1, 1, 1, 1, 0, "u 'TaInput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaOResultsFile(void) {
   /* TaOResultsFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile));
   G__memfunc_setup("TaOResultsFile",1398,G__RedDict_493_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile), -1, 0, 5, 1, 1, 0, 
"u 'string' - 10 - ptag h - 'RunNumber_t' 10 - run "
"u 'string' - 10 - atype h - 'UInt_t' 10 - chksum "
"u 'string' - 10 '\"\"' com", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaOResultsFile",1398,G__RedDict_493_0_2, 105, G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile), -1, 0, 5, 1, 1, 0, 
"C - - 10 - ptag h - 'RunNumber_t' 10 - run "
"C - - 10 - atype h - 'UInt_t' 10 - chksum "
"C - - 10 '\"\"' com", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaOResultsFile",1398,G__RedDict_493_0_3, 105, G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile), -1, 0, 3, 1, 1, 0, 
"u 'string' - 10 - ptag C - - 10 - filename "
"h - 'UInt_t' 10 - chksum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNextLine",1330,G__RedDict_493_0_4, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'string' - 10 - rtag d - 'Double_t' 10 - res "
"d - 'Double_t' 10 - err h - 'EventNumber_t' 10 - ev0 "
"h - 'EventNumber_t' 10 - ev1 u 'string' - 10 - units "
"u 'string' - 10 - com", "Write a line to the file", (void*) NULL, 0);
   G__memfunc_setup("WriteNextLine",1330,G__RedDict_493_0_5, 121, -1, -1, 0, 7, 1, 1, 0, 
"C - - 10 - rtag d - 'Double_t' 10 - res "
"d - 'Double_t' 10 - err h - 'EventNumber_t' 10 - ev0 "
"h - 'EventNumber_t' 10 - ev1 C - - 10 - units "
"C - - 10 - com", "Write a line to the file", (void*) NULL, 0);
   G__memfunc_setup("TaOResultsFile",1398,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile), -1, 0, 1, 1, 4, 0, "u 'TaOResultsFile' - 11 - -", "Do not use", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile), -1, 1, 1, 1, 4, 0, "u 'TaOResultsFile' - 11 - -", "Do not use", (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"u 'string' - 10 - ptag h - 'RunNumber_t' 10 - run "
"u 'string' - 10 - atype h - 'UInt_t' 10 - chksum "
"u 'string' - 10 - com", "Utility for constructors", (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 10 - ptag C - - 10 - filename "
"h - 'UInt_t' 10 - chksum", "Util for filename specified constructor", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_493_0_10, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaOResultsFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_493_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaOResultsFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_493_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaOResultsFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_493_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaOResultsFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RedDict_493_0_14, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RedDict_493_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RedDict_493_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_493_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_493_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaOResultsFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_493_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaOResultsFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_493_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaOResultsFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_493_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaOResultsFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TaOResultsFile", 1524, G__RedDict_493_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaFileName(void) {
   /* TaFileName */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaFileName));
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_2, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 5, 1, 1, 0, 
"h - 'RunNumber_t' 10 - r u 'string' - 10 - a "
"u 'string' - 10 - s u 'string' - 10 '\"\"' c "
"u 'string' - 10 '\"\"' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_3, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 5, 1, 1, 0, 
"h - 'RunNumber_t' 10 - r C - - 10 - a "
"C - - 10 - s C - - 10 '\"\"' c "
"C - - 10 '\"\"' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_4, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 3, 1, 1, 0, 
"u 'string' - 10 - s u 'string' - 10 '\"\"' c "
"u 'string' - 10 '\"\"' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_5, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 3, 1, 1, 0, 
"C - - 10 - s C - - 10 '\"\"' c "
"C - - 10 '\"\"' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaFileName",950,G__RedDict_494_0_6, 105, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 0, 1, 1, 1, 0, "u 'TaFileName' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RedDict_494_0_7, 117, G__get_linked_tagnum(&G__RedDictLN_TaFileName), -1, 1, 1, 1, 1, 0, "u 'TaFileName' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,G__RedDict_494_0_8, 121, -1, -1, 0, 2, 3, 1, 0, 
"h - 'RunNumber_t' 10 - r u 'string' - 10 - a", (char*)NULL, (void*) G__func2void( (void (*)(const RunNumber_t, const string))(&TaFileName::Setup) ), 0);
   G__memfunc_setup("Setup",529,G__RedDict_494_0_9, 121, -1, -1, 0, 2, 3, 1, 0, 
"h - 'RunNumber_t' 10 - r C - - 10 - a", (char*)NULL, (void*) G__func2void( (void (*)(const RunNumber_t, const char*))(&TaFileName::Setup) ), 0);
   G__memfunc_setup("String",631,G__RedDict_494_0_10, 117, G__get_linked_tagnum(&G__RedDictLN_string), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tstring",747,G__RedDict_494_0_11, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"u 'string' - 10 - b u 'string' - 10 - a "
"u 'string' - 10 - s u 'string' - 10 '\"\"' c "
"u 'string' - 10 '\"\"' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Basename",796,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RedDictLN_string), -1, 0, 1, 3, 4, 0, "h - 'RunNumber_t' 10 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_494_0_14, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaFileName::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_494_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaFileName::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_494_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaFileName::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_494_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaFileName::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RedDict_494_0_18, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RedDict_494_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RedDict_494_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_494_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_494_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaFileName::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_494_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaFileName::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_494_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaFileName::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_494_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaFileName::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TaFileName", 1076, G__RedDict_494_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVaAna(void) {
   /* VaAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_VaAna));
   G__memfunc_setup("Class",502,G__RedDict_495_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VaAna::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_495_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VaAna::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_495_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VaAna::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_495_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VaAna::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_495_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_495_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VaAna::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_495_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VaAna::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_495_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VaAna::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_495_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VaAna::DeclFileLine) ), 0);
   G__memfunc_setup("VaAna",455,G__RedDict_495_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_VaAna), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__RedDict_495_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TaInput' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__RedDict_495_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,G__RedDict_495_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OutputResults",1411,G__RedDict_495_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("VaAna", 455, G__RedDict_495_0_18, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_VaAna), -1, 0, 1, 1, 1, 0, "u 'VaAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VaAna", 581, G__RedDict_495_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_495_0_20, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_VaAna), -1, 1, 1, 1, 1, 0, "u 'VaAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaString(void) {
   /* TaString */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaString));
   G__memfunc_setup("TaString",812,G__RedDict_496_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaString",812,G__RedDict_496_0_2, 105, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 1, 1, 1, 0, "u 'string' - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaString",812,G__RedDict_496_0_3, 105, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 1, 1, 1, 0, "C - - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CmpNoCase",857,G__RedDict_496_0_4, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - s", "case insensitive compare", (void*) NULL, 0);
   G__memfunc_setup("Split",524,G__RedDict_496_0_5, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 8, "h - 'size_t' 0 '0' n", "split on whitespace", (void*) NULL, 0);
   G__memfunc_setup("Hex",293,G__RedDict_496_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "conversion to to unsigned interpreting as hex", (void*) NULL, 0);
   G__memfunc_setup("ToLower",716,G__RedDict_496_0_7, 117, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 0, 1, 1, 8, "", "conversion to lower case", (void*) NULL, 0);
   G__memfunc_setup("ToUpper",719,G__RedDict_496_0_8, 117, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 0, 1, 1, 8, "", "conversion to upper case", (void*) NULL, 0);
   G__memfunc_setup("RemoveChar",1004,G__RedDict_496_0_9, 117, G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 1, 1, 1, 0, "C - - 10 - toremove", "Remove \"toremove\" ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_496_0_10, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaString::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_496_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaString::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_496_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaString::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_496_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaString::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RedDict_496_0_14, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RedDict_496_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RedDict_496_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_496_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_496_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaString::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_496_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaString::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_496_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaString::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_496_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaString::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TaString", 812, G__RedDict_496_0_22, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 0, 1, 1, 1, 0, "u 'TaString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaString", 938, G__RedDict_496_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_496_0_24, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaString), -1, 1, 1, 1, 1, 0, "u 'TaString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaRedAna(void) {
   /* TaRedAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaRedAna));
   G__memfunc_setup("Class",502,G__RedDict_511_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaRedAna::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_511_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRedAna::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_511_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaRedAna::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_511_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaRedAna::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RedDict_511_0_5, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RedDict_511_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RedDict_511_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_511_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_511_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRedAna::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_511_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRedAna::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_511_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRedAna::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_511_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRedAna::DeclFileLine) ), 0);
   G__memfunc_setup("TaRedAna",736,G__RedDict_511_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaRedAna), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaRedAna",736,G__RedDict_511_0_14, 105, G__get_linked_tagnum(&G__RedDictLN_TaRedAna), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__RedDict_511_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__RedDict_511_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CommonInit",1021,G__RedDict_511_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__RedDict_511_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("End",279,G__RedDict_511_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TaRedAna", 736, G__RedDict_511_0_20, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaRedAna), -1, 0, 1, 1, 1, 0, "u 'TaRedAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaRedAna", 862, G__RedDict_511_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_511_0_22, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaRedAna), -1, 1, 1, 1, 1, 0, "u 'TaRedAna' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaStatistics(void) {
   /* TaStatistics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaStatistics));
   G__memfunc_setup("TaStatistics",1248,G__RedDict_512_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaStatistics), -1, 0, 2, 1, 1, 0, 
"h - 'size_t' 10 - nquant g - 'Bool_t' 10 'true' goodErrors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaStatistics",1248,G__RedDict_512_0_2, 105, G__get_linked_tagnum(&G__RedDictLN_TaStatistics), -1, 0, 1, 1, 1, 0, "u 'TaStatistics' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RedDict_512_0_3, 117, G__get_linked_tagnum(&G__RedDictLN_TaStatistics), -1, 1, 1, 1, 1, 1, "u 'TaStatistics' - 11 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Zero",416,G__RedDict_512_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "Set sums to zero", (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__RedDict_512_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - x u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 'vector<Double_t>(0)' xerr "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 'vector<Double_t>(0)' w", "Add a vector", (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__RedDict_512_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 10 - x d - 'Double_t' 10 '0' xerr "
"d - 'Double_t' 10 '0' w", "Add a single quantity", (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__RedDict_512_0_7, 117, G__get_linked_tagnum(&G__RedDictLN_TaStatistics), -1, 1, 1, 1, 1, 0, "u 'TaStatistics' - 11 - s", "Combine statistics             ", (void*) NULL, 0);
   G__memfunc_setup("N",78,G__RedDict_512_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", "number of events in stats", (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__RedDict_512_0_9, 104, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", "size of statistics vector (nquant)", (void*) NULL, 0);
   G__memfunc_setup("DataRMS",620,G__RedDict_512_0_10, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", "vector of RMS of x", (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__RedDict_512_0_11, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", "vector of means of x", (void*) NULL, 0);
   G__memfunc_setup("MeanVar",682,G__RedDict_512_0_12, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", "vector of variances of means of x", (void*) NULL, 0);
   G__memfunc_setup("MeanErr",682,G__RedDict_512_0_13, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", "vector of errors of means of x", (void*) NULL, 0);
   G__memfunc_setup("MeanAndErr",957,G__RedDict_512_0_14, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR), G__defined_typename("vector<pair<Double_t,Double_t> >"), 0, 0, 1, 1, 8, "", "vector of means of x and their errors", (void*) NULL, 0);
   G__memfunc_setup("Neff",383,G__RedDict_512_0_15, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", "effective N for all x", (void*) NULL, 0);
   G__memfunc_setup("DataRMS",620,G__RedDict_512_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "RMS of one x", (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__RedDict_512_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "mean of one x", (void*) NULL, 0);
   G__memfunc_setup("MeanVar",682,G__RedDict_512_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "variance of mean of one x", (void*) NULL, 0);
   G__memfunc_setup("MeanErr",682,G__RedDict_512_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "error of mean of one x", (void*) NULL, 0);
   G__memfunc_setup("MeanAndErr",957,G__RedDict_512_0_20, 117, G__get_linked_tagnum(&G__RedDictLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "mean of one x and its error", (void*) NULL, 0);
   G__memfunc_setup("Neff",383,G__RedDict_512_0_21, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "effective N for one x", (void*) NULL, 0);
   G__memfunc_setup("SetFirstPass",1227,G__RedDict_512_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", "for multipass analysis", (void*) NULL, 0);
   G__memfunc_setup("DumpSums",830,G__RedDict_512_0_23, 121, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 10 - i", "For debugging, print raw sums for one quantity.", (void*) NULL, 0);
   G__memfunc_setup("PDataMS",618,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "h - 'size_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMean",465,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "h - 'size_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMeanVar",762,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "h - 'size_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PNeff",463,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "h - 'size_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_512_0_28, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaStatistics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_512_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaStatistics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_512_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaStatistics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_512_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaStatistics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RedDict_512_0_32, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RedDict_512_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RedDict_512_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_512_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_512_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaStatistics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_512_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaStatistics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_512_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaStatistics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_512_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaStatistics::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TaStatistics", 1374, G__RedDict_512_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaRootRegDef(void) {
   /* TaRootRegDef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef));
   G__memfunc_setup("TaRootRegDef",1158,G__RedDict_513_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutIV",472,G__RedDict_513_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutDV",467,G__RedDict_513_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVNumber",1064,G__RedDict_513_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDVNumber",1059,G__RedDict_513_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVName",832,G__RedDict_513_0_6, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDVName",827,G__RedDict_513_0_7, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIVIndex",951,G__RedDict_513_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDVIndex",946,G__RedDict_513_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__RedDict_513_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Usage",501,G__RedDict_513_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_513_0_12, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaRootRegDef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_513_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootRegDef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_513_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaRootRegDef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_513_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaRootRegDef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_513_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_513_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootRegDef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_513_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRootRegDef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_513_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootRegDef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_513_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRootRegDef::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TaRootRegDef", 1158, G__RedDict_513_0_24, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef), -1, 0, 1, 1, 1, 0, "u 'TaRootRegDef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaRootRegDef", 1284, G__RedDict_513_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_513_0_26, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef), -1, 1, 1, 1, 1, 0, "u 'TaRootRegDef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaRegression(void) {
   /* TaRegression */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaRegression));
   G__memfunc_setup("Class",502,G__RedDict_514_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaRegression::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_514_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRegression::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_514_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaRegression::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_514_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaRegression::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_514_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_514_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRegression::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_514_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRegression::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_514_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRegression::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_514_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRegression::DeclFileLine) ), 0);
   G__memfunc_setup("TaRegression",1238,G__RedDict_514_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaRegression), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TaInput' - 1 - -", "Initialization with config file", (void*) NULL, 1);
   G__memfunc_setup("LinearInit",1007,G__RedDict_514_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", "Initialization for Linear Algorithm", (void*) NULL, 0);
   G__memfunc_setup("MatrixInit",1033,G__RedDict_514_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "Initialization for Matrix Algorithm", (void*) NULL, 0);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Gateway Regression algorithms", (void*) NULL, 1);
   G__memfunc_setup("ProcessLinear",1338,G__RedDict_514_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "Linear Regression algorithm", (void*) NULL, 0);
   G__memfunc_setup("ProcessMatrix",1364,G__RedDict_514_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "Matrix Regression algorithm", (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__RedDict_514_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteStats",1050,G__RedDict_514_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteSlopes",1153,G__RedDict_514_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaRegression",1238,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RedDictLN_TaRegression), -1, 0, 1, 1, 4, 0, "u 'TaRegression' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__RedDictLN_TaRegression), -1, 1, 1, 1, 4, 0, "u 'TaRegression' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaRegression", 1364, G__RedDict_514_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaDitCyc(void) {
   /* TaDitCyc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitCyc));
   G__memfunc_setup("Class",502,G__RedDict_590_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaDitCyc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_590_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitCyc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_590_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaDitCyc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_590_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaDitCyc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_590_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_590_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitCyc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_590_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaDitCyc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_590_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitCyc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_590_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaDitCyc::DeclFileLine) ), 0);
   G__memfunc_setup("TaDitCyc",757,G__RedDict_590_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaDitCyc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TaDitCyc",757,G__RedDict_590_0_14, 105, G__get_linked_tagnum(&G__RedDictLN_TaDitCyc), -1, 0, 1, 1, 1, 0, "u 'TaDitCyc' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,G__RedDict_590_0_15, 85, G__get_linked_tagnum(&G__RedDictLN_TaDitCyc), -1, 0, 0, 1, 1, 0, "", "returns a new TaDitCyc, with empty data but the same ", (void*) NULL, 0);
   G__memfunc_setup("Merge",496,G__RedDict_590_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TaDitCyc' - 0 - mergeCyc", "merges argument TaDitCyc with current ", (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__RedDict_590_0_17, 85, G__get_linked_tagnum(&G__RedDictLN_TaDitCyc), -1, 0, 0, 1, 1, 0, "", "returns full copy of this cycle", (void*) NULL, 0);
   G__memfunc_setup("IsCompatible",1212,G__RedDict_590_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TaDitCyc' - 0 - compCyc", "compares two cycles to make sure", (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__RedDict_590_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iModObj d - 'Double_t' 0 - value "
"D - 'Double_t' 0 - DetVal D - 'Double_t' 0 - MonVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSlopes",1001,G__RedDict_590_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcCoeffs",969,G__RedDict_590_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetNum",889,G__RedDict_590_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - ndet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMonNum",902,G__RedDict_590_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - nmon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDitNum",893,G__RedDict_590_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - ndit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFirstEvent",1334,G__RedDict_590_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - firstev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastSCEvent",1368,G__RedDict_590_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - lastev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastEvent",1218,G__RedDict_590_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - lastev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSuperCycleNumber",1940,G__RedDict_590_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - cycnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StepLostEventCounter",2080,G__RedDict_590_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDit",881,G__RedDict_590_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDet",877,G__RedDict_590_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMon",890,G__RedDict_590_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFirstEvent",1322,G__RedDict_590_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastSCEvent",1356,G__RedDict_590_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastEvent",1206,G__RedDict_590_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSuperCycleNumber",1928,G__RedDict_590_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLostEventCounter",1956,G__RedDict_590_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlopesAreDone",1300,G__RedDict_590_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CoeffsAreDone",1268,G__RedDict_590_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcsAreDone",1156,G__RedDict_590_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeDetVDit",1463,G__RedDict_590_0_41, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idet i - 'Int_t' 0 - imodobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrSlopeDetVDit",1760,G__RedDict_590_0_42, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idet i - 'Int_t' 0 - imodobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeMonVDit",1476,G__RedDict_590_0_43, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - imon i - 'Int_t' 0 - imodobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrSlopeMonVDit",1773,G__RedDict_590_0_44, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - imon i - 'Int_t' 0 - imodobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoeffDetVMon",1440,G__RedDict_590_0_45, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idet i - 'Int_t' 0 - imon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrCoeffDetVMon",1737,G__RedDict_590_0_46, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idet i - 'Int_t' 0 - imon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModVal",867,G__RedDict_590_0_47, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - imodobj i - 'Int_t' 0 - iwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonVal",877,G__RedDict_590_0_48, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - imodobj i - 'Int_t' 0 - imon "
"i - 'Int_t' 0 - iwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetVal",864,G__RedDict_590_0_49, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - imodobj i - 'Int_t' 0 - idet "
"i - 'Int_t' 0 - iwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModVals",982,G__RedDict_590_0_50, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - imodobj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonVals",992,G__RedDict_590_0_51, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - imodobj i - 'Int_t' 0 - imon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetVals",979,G__RedDict_590_0_52, 117, G__get_linked_tagnum(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - imodobj i - 'Int_t' 0 - idet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDatForModIndex",1734,G__RedDict_590_0_53, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaDitCyc", 883, G__RedDict_590_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_590_0_55, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaDitCyc), -1, 1, 1, 1, 1, 0, "u 'TaDitCyc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaRootDitDef(void) {
   /* TaRootDitDef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef));
   G__memfunc_setup("TaRootDitDef",1161,G__RedDict_592_0_1, 105, G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutDetector",1139,G__RedDict_592_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutMonitor",1057,G__RedDict_592_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutCoil",704,G__RedDict_592_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__RedDict_592_0_5, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitorName",1417,G__RedDict_592_0_6, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoilName",1064,G__RedDict_592_0_7, 117, G__get_linked_tagnum(&G__RedDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorIndex",1618,G__RedDict_592_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMonitorIndex",1536,G__RedDict_592_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoilIndex",1183,G__RedDict_592_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDetectors",1533,G__RedDict_592_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMonitors",1451,G__RedDict_592_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumCoils",1098,G__RedDict_592_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__RedDict_592_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Usage",501,G__RedDict_592_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RedDict_592_0_16, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaRootDitDef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_592_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootDitDef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_592_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaRootDitDef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_592_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaRootDitDef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_592_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_592_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootDitDef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_592_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRootDitDef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_592_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaRootDitDef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_592_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaRootDitDef::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TaRootDitDef", 1161, G__RedDict_592_0_28, (int) ('i'), G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef), -1, 0, 1, 1, 1, 0, "u 'TaRootDitDef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaRootDitDef", 1287, G__RedDict_592_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RedDict_592_0_30, (int) ('u'), G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef), -1, 1, 1, 1, 1, 0, "u 'TaRootDitDef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTaDitAna(void) {
   /* TaDitAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitAna));
   G__memfunc_setup("Class",502,G__RedDict_593_0_1, 85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TaDitAna::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RedDict_593_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitAna::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RedDict_593_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TaDitAna::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RedDict_593_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TaDitAna::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RedDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RedDict_593_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RedDict_593_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitAna::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RedDict_593_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaDitAna::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RedDict_593_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TaDitAna::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RedDict_593_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TaDitAna::DeclFileLine) ), 0);
   G__memfunc_setup("TaDitAna",742,G__RedDict_593_0_13, 105, G__get_linked_tagnum(&G__RedDictLN_TaDitAna), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TaInput' - 1 - -", "Initialization with config file", (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "sets this mutha in motion", (void*) NULL, 1);
   G__memfunc_setup("ComputeDitCoeffs",1620,G__RedDict_593_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "calc dit coeffs and slopes from each S-C", (void*) NULL, 0);
   G__memfunc_setup("OutputResults",1411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "generate text and rootfile output", (void*) NULL, 1);
   G__memfunc_setup("LoadModData",1050,G__RedDict_593_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutputSlopes",1287,G__RedDict_593_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "output slopes for each minirun", (void*) NULL, 0);
   G__memfunc_setup("FillSlopesTree",1421,G__RedDict_593_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "put slopes for each minirun into tree", (void*) NULL, 0);
   G__memfunc_setup("CorrectPairTree",1518,G__RedDict_593_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "fill ditpair tree with corrected asyms for all dets", (void*) NULL, 0);
   G__memfunc_setup("PrintCycResults",1566,G__RedDict_593_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", "print slopes/coeffs from indicated cycle", (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TaDitAna", 868, G__RedDict_593_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRedDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRedDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRedDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RedDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_ios_base = { "ios_base" , 99 , -1 };
G__linked_taginfo G__RedDictLN_basic_ioslEcharcOchar_traitslEchargRsPgR = { "basic_ios<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEstringcLcLiteratorgR = { "reverse_iterator<string::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__RedDictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaConfFile = { "TaConfFile" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaInput = { "TaInput" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaOResultsFile = { "TaOResultsFile" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaFileName = { "TaFileName" , 99 , -1 };
G__linked_taginfo G__RedDictLN_VaAna = { "VaAna" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaString = { "TaString" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_pairlETStringcOTStringgR = { "pair<TString,TString>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_pairlETStringcOdoublegR = { "pair<TString,double>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR = { "vector<pair<TString,double>,allocator<pair<TString,double> > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<TString,double>,allocator<pair<TString,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaRedAna = { "TaRedAna" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaStatistics = { "TaStatistics" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaRootRegDef = { "TaRootRegDef" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaRegression = { "TaRegression" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR = { "vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaDitCyc = { "TaDitCyc" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaDitCyccLcLObjCyc = { "TaDitCyc::ObjCyc" , 115 , -1 };
G__linked_taginfo G__RedDictLN_TaRootDitDef = { "TaRootDitDef" , 99 , -1 };
G__linked_taginfo G__RedDictLN_TaDitAna = { "TaDitAna" , 99 , -1 };
G__linked_taginfo G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__RedDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRedDict() {
  G__RedDictLN_TClass.tagnum = -1 ;
  G__RedDictLN_TBuffer.tagnum = -1 ;
  G__RedDictLN_TMemberInspector.tagnum = -1 ;
  G__RedDictLN_TObject.tagnum = -1 ;
  G__RedDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RedDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__RedDictLN_ios_base.tagnum = -1 ;
  G__RedDictLN_basic_ioslEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RedDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RedDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RedDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RedDictLN_string.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEstringcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_TObjArray.tagnum = -1 ;
  G__RedDictLN_TString.tagnum = -1 ;
  G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RedDictLN_TTree.tagnum = -1 ;
  G__RedDictLN_TFile.tagnum = -1 ;
  G__RedDictLN_pairlEintcOintgR.tagnum = -1 ;
  G__RedDictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_TaConfFile.tagnum = -1 ;
  G__RedDictLN_TaInput.tagnum = -1 ;
  G__RedDictLN_TaOResultsFile.tagnum = -1 ;
  G__RedDictLN_TaFileName.tagnum = -1 ;
  G__RedDictLN_VaAna.tagnum = -1 ;
  G__RedDictLN_TaString.tagnum = -1 ;
  G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_pairlETStringcOTStringgR.tagnum = -1 ;
  G__RedDictLN_pairlETStringcOdoublegR.tagnum = -1 ;
  G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_TaRedAna.tagnum = -1 ;
  G__RedDictLN_TaStatistics.tagnum = -1 ;
  G__RedDictLN_TaRootRegDef.tagnum = -1 ;
  G__RedDictLN_TaRegression.tagnum = -1 ;
  G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RedDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RedDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RedDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__RedDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__RedDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__RedDictLN_TaDitCyc.tagnum = -1 ;
  G__RedDictLN_TaDitCyccLcLObjCyc.tagnum = -1 ;
  G__RedDictLN_TaRootDitDef.tagnum = -1 ;
  G__RedDictLN_TaDitAna.tagnum = -1 ;
  G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__RedDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRedDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RedDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_ios_base);
   G__get_linked_tagnum_fwd(&G__RedDictLN_basic_ioslEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_string);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEstringcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RedDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__RedDictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaConfFile),sizeof(TaConfFile),-1,29952,"config file class for ReD analysis",G__setup_memvarTaConfFile,G__setup_memfuncTaConfFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaInput),sizeof(TaInput),-1,62720,"input file class for ReD analysis",G__setup_memvarTaInput,G__setup_memfuncTaInput);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaOResultsFile),sizeof(TaOResultsFile),-1,36352,"Results file for output",G__setup_memvarTaOResultsFile,G__setup_memfuncTaOResultsFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaFileName),sizeof(TaFileName),-1,36608,"Pan standard file names",G__setup_memvarTaFileName,G__setup_memfuncTaFileName);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_VaAna),sizeof(VaAna),-1,29952,(char*)NULL,G__setup_memvarVaAna,G__setup_memfuncVaAna);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaString),sizeof(TaString),-1,34048,"Improved string class",G__setup_memvarTaString,G__setup_memfuncTaString);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_pairlETStringcOTStringgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_pairlETStringcOdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEpairlETStringcOdoublegRcOallocatorlEpairlETStringcOdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaRedAna),sizeof(TaRedAna),-1,34048,"regression or dithering analysis",G__setup_memvarTaRedAna,G__setup_memfuncTaRedAna);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaStatistics),sizeof(TaStatistics),-1,36352,"Statistics -- means, widths, etc",G__setup_memvarTaStatistics,G__setup_memfuncTaStatistics);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootRegDef),sizeof(TaRootRegDef),-1,29952,"Class to define variables within reg tree",G__setup_memvarTaRootRegDef,G__setup_memfuncTaRootRegDef);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaRegression),sizeof(TaRegression),-1,32512,(char*)NULL,G__setup_memvarTaRegression,G__setup_memfuncTaRegression);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_pairlEunsignedsPintcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitCyc),sizeof(TaDitCyc),-1,30464,"helper class for dithering analysis",G__setup_memvarTaDitCyc,G__setup_memfuncTaDitCyc);
   G__get_linked_tagnum_fwd(&G__RedDictLN_TaDitCyccLcLObjCyc);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaRootDitDef),sizeof(TaRootDitDef),-1,29952,"Class to define variables within reg tree",G__setup_memvarTaRootDitDef,G__setup_memfuncTaRootDitDef);
   G__tagtable_setup(G__get_linked_tagnum(&G__RedDictLN_TaDitAna),sizeof(TaDitAna),-1,29952,"dithering analysis class",G__setup_memvarTaDitAna,G__setup_memfuncTaDitAna);
   G__get_linked_tagnum_fwd(&G__RedDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RedDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupRedDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRedDict()");
  G__set_cpp_environmentRedDict();
  G__cpp_setup_tagtableRedDict();

  G__cpp_setup_inheritanceRedDict();

  G__cpp_setup_typetableRedDict();

  G__cpp_setup_memvarRedDict();

  G__cpp_setup_memfuncRedDict();
  G__cpp_setup_globalRedDict();
  G__cpp_setup_funcRedDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRedDict();
  return;
}
class G__cpp_setup_initRedDict {
  public:
    G__cpp_setup_initRedDict() { G__add_setup_func("RedDict",(G__incsetup)(&G__cpp_setupRedDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRedDict() { G__remove_setup_func("RedDict"); }
};
G__cpp_setup_initRedDict G__cpp_setup_initializerRedDict;

