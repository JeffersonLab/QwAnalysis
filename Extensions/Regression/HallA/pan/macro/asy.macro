{
// Macro to plot the charge asymmetries
// You must first ".x open.macro" to read in the root file.

    gROOT->Reset();

    c1 = new TCanvas("c1","Charge asymmetries",200,10,700,500);

    c1->SetFillColor(42);
    c1->SetGrid();
    c1->GetFrame()->SetFillColor(21);
    c1->GetFrame()->SetBorderSize(12);  
    gStyle->SetOptStat(0000);

    gStyle->SetOptFit(0111);
    gStyle->SetStatH(0.20);
    gStyle->SetStatW(0.25);
    gStyle->SetTitleH(0.12);
    gStyle->SetTitleW(0.7);
    gStyle->SetLabelSize(0.05,"x");
    gStyle->SetLabelSize(0.05,"y");
    gROOT->ForceStyle();

    pad1 = new TPad("pad1","",0.03,0.02,0.49,0.95,18);
    pad2 = new TPad("pad2","",0.52,0.02,0.98,0.95,18);
    pad1->Draw();
    pad2->Draw();

    pad1->cd();
    TH1F *h1 = new TH1F("asy1","BCM1 Asymmetry",100,-7000,7000);
    P->Draw("asym_bcm1>>asy1");
    h1.Fit("gaus");
    TF1 *fit = h1.GetFunction("gaus");
    Double_t a1mean = fit->GetParameter(1);
    Double_t a1rms = fit->GetParameter(2);
    Int_t numa1 = h1.GetEntries()+1;
    
    pad2->cd();
    TH1F *h2 = new TH1F("asy2","BCM2 Asymmetry",100,-7000,7000);
    P->Draw("asym_bcm2>>asy2");
    h2.Fit("gaus");
    TF1 *fit = h2.GetFunction("gaus");
    Double_t a2mean = fit->GetParameter(1);
    Double_t a2rms = fit->GetParameter(2);
    Int_t numa2 = h2.GetEntries()+1;

    c1->Update();

    cout << "Asy BCM1 = "<<a1mean<<"  +/-  "<<a1rms/sqrt(numa1)<<endl;
    cout << "Asy BCM2 = "<<a2mean<<"  +/-  "<<a2rms/sqrt(numa2)<<endl;

}

